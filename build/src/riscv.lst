GAS LISTING /tmp/ccPe5w3o.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5riscv20handleSupervisorTrapEv
   9              	_ZN5riscv20handleSupervisorTrapEv:
  10              	.LFB57:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 5/21/23.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** 
   6:src/riscv.cpp **** #include "../h/riscv.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/ConsoleKernel.hpp"
   9:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
  10:src/riscv.cpp **** void riscv::handleSupervisorTrap() {
  12              		.loc 1 10 36
  13              		.cfi_startproc
  14 0000 130101F8 		addi	sp,sp,-128
  15              		.cfi_def_cfa_offset 128
  16 0004 233C1106 		sd	ra,120(sp)
  17 0008 23388106 		sd	s0,112(sp)
  18 000c 23349106 		sd	s1,104(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040108 		addi	s0,sp,128
  23              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     volatile uint64 sepc = riscv::r_sepc();
  24              		.loc 1 11 5
  25              	.LBB48:
  26              	.LBB49:
  27              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 5/21/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "../lib/mem.h"
  10:src/../h/riscv.hpp **** #include "TCB.hpp"
  11:src/../h/riscv.hpp **** #include "PrintKernel.hpp"
  12:src/../h/riscv.hpp **** #include "_sem.hpp"
  13:src/../h/riscv.hpp **** #include "sleeping.hpp"
  14:src/../h/riscv.hpp **** //registers: scause, spec, sstatus, stvec, sip, sie
  15:src/../h/riscv.hpp **** //Ideja preuzeta sa online vezbi
  16:src/../h/riscv.hpp **** class riscv{
  17:src/../h/riscv.hpp **** private:
  18:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  19:src/../h/riscv.hpp ****     static void timerInterruptHandler();
  20:src/../h/riscv.hpp ****     static void consoleInterruptHandler();
GAS LISTING /tmp/ccPe5w3o.s 			page 2


  21:src/../h/riscv.hpp **** public:
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits
  24:src/../h/riscv.hpp ****     // has to be a non-inline function
  25:src/../h/riscv.hpp ****     static void popSppSpie();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // skok u prekidnu rutinu
  28:src/../h/riscv.hpp ****     static void supervisorTrap();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     //read scause register
  31:src/../h/riscv.hpp ****     static uint64 r_scause(){
  32:src/../h/riscv.hpp ****         uint64 volatile scause;
  33:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[scause], scause" : [scause] "=r"(scause));
  34:src/../h/riscv.hpp ****         return scause;
  35:src/../h/riscv.hpp ****     }
  36:src/../h/riscv.hpp ****     //write scause register
  37:src/../h/riscv.hpp ****     static void w_scause(uint64 scause){
  38:src/../h/riscv.hpp ****         __asm__ volatile("csrw scause, %[scause]": : [scause] "r"(scause));
  39:src/../h/riscv.hpp ****     }
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     //read spec register
  42:src/../h/riscv.hpp ****     static uint64 r_sepc(){
  43:src/../h/riscv.hpp ****         uint64 volatile sepc;
  28              		.loc 2 43 9
  44:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  29              		.loc 2 44 9
  30              		.loc 2 44 67 is_stmt 0
  31              	#APP
  32              	# 44 "src/../h/riscv.hpp" 1
  45              	        return sepc;
  33              		csrr a5, sepc
  34              	# 0 "" 2
  35              	#NO_APP
  36 0018 233CF4F8 		sd	a5,-104(s0)
  37              		.loc 2 45 9 is_stmt 1
  38              		.loc 2 45 16 is_stmt 0
  39 001c 833784F9 		ld	a5,-104(s0)
  40              	.LBE49:
  41              	.LBE48:
  42              		.loc 1 11 42
  43 0020 233CF4FC 		sd	a5,-40(s0)
  12:src/riscv.cpp ****     volatile uint64 sstatus = riscv::r_sstatus();
  44              		.loc 1 12 5 is_stmt 1
  45              	.LBB50:
  46              	.LBB51:
  46:src/../h/riscv.hpp ****     }
  47:src/../h/riscv.hpp ****     //write spec register
  48:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc){
  49:src/../h/riscv.hpp ****         __asm__ volatile("csrw sepc, %[sepc]": : [sepc] "r"(sepc));
  50:src/../h/riscv.hpp ****     }
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSstatus
  53:src/../h/riscv.hpp ****     {
  54:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  55:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  56:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  57:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccPe5w3o.s 			page 3


  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum BitMaskSip
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  62:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  63:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  64:src/../h/riscv.hpp ****     };
  65:src/../h/riscv.hpp ****     //read sstatus register
  66:src/../h/riscv.hpp ****     static uint64 r_sstatus(){
  67:src/../h/riscv.hpp ****         uint64 volatile sstatus;
  47              		.loc 2 67 9
  68:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
  48              		.loc 2 68 9
  49              		.loc 2 68 79 is_stmt 0
  50              	#APP
  51              	# 68 "src/../h/riscv.hpp" 1
  69              	        return sstatus;
  52              		csrr a5, sstatus
  53              	# 0 "" 2
  54              	#NO_APP
  55 0028 2338F4F8 		sd	a5,-112(s0)
  56              		.loc 2 69 9 is_stmt 1
  57              		.loc 2 69 16 is_stmt 0
  58 002c 833704F9 		ld	a5,-112(s0)
  59              	.LBE51:
  60              	.LBE50:
  61              		.loc 1 12 48
  62 0030 2338F4FC 		sd	a5,-48(s0)
  13:src/riscv.cpp ****     volatile uint64 scause = riscv::r_scause();
  63              		.loc 1 13 5 is_stmt 1
  64              	.LBB52:
  65              	.LBB53:
  32:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[scause], scause" : [scause] "=r"(scause));
  66              		.loc 2 32 9
  33:src/../h/riscv.hpp ****         return scause;
  67              		.loc 2 33 9
  33:src/../h/riscv.hpp ****         return scause;
  68              		.loc 2 33 75 is_stmt 0
  69              	#APP
  70              	# 33 "src/../h/riscv.hpp" 1
  71              		csrr a5, scause
  72              	# 0 "" 2
  73              	#NO_APP
  74 0038 2334F4F8 		sd	a5,-120(s0)
  34:src/../h/riscv.hpp ****     }
  75              		.loc 2 34 9 is_stmt 1
  34:src/../h/riscv.hpp ****     }
  76              		.loc 2 34 16 is_stmt 0
  77 003c 833784F8 		ld	a5,-120(s0)
  78              	.LBE53:
  79              	.LBE52:
  80              		.loc 1 13 46
  81 0040 2334F4FC 		sd	a5,-56(s0)
  14:src/riscv.cpp **** 
  15:src/riscv.cpp ****     if(scause == 0x0000000000000009UL || scause == 0x0000000000000008UL){
  82              		.loc 1 15 5 is_stmt 1
  83              	.LBB54:
GAS LISTING /tmp/ccPe5w3o.s 			page 4


  84              		.loc 1 15 15 is_stmt 0
  85 0044 033784FC 		ld	a4,-56(s0)
  86              		.loc 1 15 39
  87 0048 93079000 		li	a5,9
  88 004c 6308F700 		beq	a4,a5,.L2
  89              		.loc 1 15 49 discriminator 2
  90 0050 033784FC 		ld	a4,-56(s0)
  91              		.loc 1 15 39 discriminator 2
  92 0054 93078000 		li	a5,8
  93 0058 6310F706 		bne	a4,a5,.L24
  94              	.L2:
  95              	.LBB55:
  16:src/riscv.cpp ****         sepc+=4;
  96              		.loc 1 16 9 is_stmt 1
  97              		.loc 1 16 13 is_stmt 0
  98 005c 833784FD 		ld	a5,-40(s0)
  99 0060 93874700 		addi	a5,a5,4
 100 0064 233CF4FC 		sd	a5,-40(s0)
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****         volatile uint64 argument[5];
 101              		.loc 1 18 9 is_stmt 1
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****         // citanje a0 sa steka (broj funkcije)
  21:src/riscv.cpp ****         __asm__ volatile("ld %0, 10*8(fp)":"=r" (argument[0]));
 102              		.loc 1 21 9
 103              		.loc 1 21 63 is_stmt 0
 104              	#APP
 105              	# 21 "src/riscv.cpp" 1
  22              	        // citanje a1 sa steka
 106              		ld a5, 10*8(fp)
 107              	# 0 "" 2
 108              	#NO_APP
 109 006c 2330F4FA 		sd	a5,-96(s0)
  23:src/riscv.cpp ****         __asm__ volatile("ld %0, 11*8(fp)":"=r" (argument[1]));
 110              		.loc 1 23 9 is_stmt 1
 111              		.loc 1 23 63 is_stmt 0
 112              	#APP
 113              	# 23 "src/riscv.cpp" 1
  24              	        // citanje a2 sa steka
 114              		ld a5, 11*8(fp)
 115              	# 0 "" 2
 116              	#NO_APP
 117 0074 2334F4FA 		sd	a5,-88(s0)
  25:src/riscv.cpp ****         __asm__ volatile("ld %0, 12*8(fp)":"=r" (argument[2]));
 118              		.loc 1 25 9 is_stmt 1
 119              		.loc 1 25 63 is_stmt 0
 120              	#APP
 121              	# 25 "src/riscv.cpp" 1
  26              	        // citanje a3 sa steka
 122              		ld a5, 12*8(fp)
 123              	# 0 "" 2
 124              	#NO_APP
 125 007c 2338F4FA 		sd	a5,-80(s0)
  27:src/riscv.cpp ****         __asm__ volatile("ld %0, 13*8(fp)":"=r" (argument[3]));
 126              		.loc 1 27 9 is_stmt 1
 127              		.loc 1 27 63 is_stmt 0
 128              	#APP
GAS LISTING /tmp/ccPe5w3o.s 			page 5


 129              	# 27 "src/riscv.cpp" 1
  28              	        // citanje a4 sa steka
 130              		ld a5, 13*8(fp)
 131              	# 0 "" 2
 132              	#NO_APP
 133 0084 233CF4FA 		sd	a5,-72(s0)
  29:src/riscv.cpp ****         __asm__ volatile("ld %0, 14*8(fp)":"=r" (argument[4]));
 134              		.loc 1 29 9 is_stmt 1
 135              		.loc 1 29 63 is_stmt 0
 136              	#APP
 137              	# 29 "src/riscv.cpp" 1
  30              	
 138              		ld a5, 14*8(fp)
 139              	# 0 "" 2
 140              	#NO_APP
 141 008c 2330F4FC 		sd	a5,-64(s0)
  31:src/riscv.cpp ****         volatile uint64 return_val;
 142              		.loc 1 31 9 is_stmt 1
  32:src/riscv.cpp **** 
  33:src/riscv.cpp ****         switch(argument[0]){
 143              		.loc 1 33 9
 144              		.loc 1 33 26 is_stmt 0
 145 0090 833704FA 		ld	a5,-96(s0)
 146 0094 13072004 		li	a4,66
 147 0098 636EF720 		bgtu	a5,a4,.L4
 148 009c 93972700 		slli	a5,a5,2
 149 00a0 17070000 		lla	a4,.L6
 149      13070700 
 150 00a8 B387E700 		add	a5,a5,a4
 151 00ac 83A70700 		lw	a5,0(a5)
 152 00b0 B387E700 		add	a5,a5,a4
 153 00b4 67800700 		jr	a5
 154              		.section	.rodata
 155              		.align	2
 156              		.align	2
 157              	.L6:
 158 0000 00000000 		.word	.L4-.L6
 159 0004 00000000 		.word	.L18-.L6
 160 0008 00000000 		.word	.L17-.L6
 161 000c 00000000 		.word	.L4-.L6
 162 0010 00000000 		.word	.L4-.L6
 163 0014 00000000 		.word	.L4-.L6
 164 0018 00000000 		.word	.L4-.L6
 165 001c 00000000 		.word	.L4-.L6
 166 0020 00000000 		.word	.L4-.L6
 167 0024 00000000 		.word	.L4-.L6
 168 0028 00000000 		.word	.L4-.L6
 169 002c 00000000 		.word	.L4-.L6
 170 0030 00000000 		.word	.L4-.L6
 171 0034 00000000 		.word	.L4-.L6
 172 0038 00000000 		.word	.L4-.L6
 173 003c 00000000 		.word	.L4-.L6
 174 0040 00000000 		.word	.L4-.L6
 175 0044 00000000 		.word	.L16-.L6
 176 0048 00000000 		.word	.L15-.L6
 177 004c 00000000 		.word	.L14-.L6
 178 0050 00000000 		.word	.L13-.L6
GAS LISTING /tmp/ccPe5w3o.s 			page 6


 179 0054 00000000 		.word	.L4-.L6
 180 0058 00000000 		.word	.L4-.L6
 181 005c 00000000 		.word	.L4-.L6
 182 0060 00000000 		.word	.L4-.L6
 183 0064 00000000 		.word	.L4-.L6
 184 0068 00000000 		.word	.L4-.L6
 185 006c 00000000 		.word	.L4-.L6
 186 0070 00000000 		.word	.L4-.L6
 187 0074 00000000 		.word	.L4-.L6
 188 0078 00000000 		.word	.L4-.L6
 189 007c 00000000 		.word	.L4-.L6
 190 0080 00000000 		.word	.L4-.L6
 191 0084 00000000 		.word	.L12-.L6
 192 0088 00000000 		.word	.L11-.L6
 193 008c 00000000 		.word	.L10-.L6
 194 0090 00000000 		.word	.L9-.L6
 195 0094 00000000 		.word	.L4-.L6
 196 0098 00000000 		.word	.L4-.L6
 197 009c 00000000 		.word	.L4-.L6
 198 00a0 00000000 		.word	.L4-.L6
 199 00a4 00000000 		.word	.L4-.L6
 200 00a8 00000000 		.word	.L4-.L6
 201 00ac 00000000 		.word	.L4-.L6
 202 00b0 00000000 		.word	.L4-.L6
 203 00b4 00000000 		.word	.L4-.L6
 204 00b8 00000000 		.word	.L4-.L6
 205 00bc 00000000 		.word	.L4-.L6
 206 00c0 00000000 		.word	.L4-.L6
 207 00c4 00000000 		.word	.L8-.L6
 208 00c8 00000000 		.word	.L4-.L6
 209 00cc 00000000 		.word	.L4-.L6
 210 00d0 00000000 		.word	.L4-.L6
 211 00d4 00000000 		.word	.L4-.L6
 212 00d8 00000000 		.word	.L4-.L6
 213 00dc 00000000 		.word	.L4-.L6
 214 00e0 00000000 		.word	.L4-.L6
 215 00e4 00000000 		.word	.L4-.L6
 216 00e8 00000000 		.word	.L4-.L6
 217 00ec 00000000 		.word	.L4-.L6
 218 00f0 00000000 		.word	.L4-.L6
 219 00f4 00000000 		.word	.L4-.L6
 220 00f8 00000000 		.word	.L4-.L6
 221 00fc 00000000 		.word	.L4-.L6
 222 0100 00000000 		.word	.L4-.L6
 223 0104 00000000 		.word	.L7-.L6
 224 0108 00000000 		.word	.L5-.L6
 225              		.text
 226              	.L24:
 227              	.LBE55:
  34:src/riscv.cpp ****             case 0x01: // mem_alloc
  35:src/riscv.cpp ****                 return_val = (uint64)MemoryAllocator::mem_alloc((size_t)argument[1]);
  36:src/riscv.cpp ****                 //return_val = (uint64)__mem_alloc((size_t)argument[1]);
  37:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  38:src/riscv.cpp ****                 break;
  39:src/riscv.cpp ****             case 0x02: // mem_free
  40:src/riscv.cpp ****                 return_val = (uint64)MemoryAllocator::mem_free((void*)argument[1]);
  41:src/riscv.cpp ****                 //return_val = (uint64)__mem_free((void*)argument[1]);
GAS LISTING /tmp/ccPe5w3o.s 			page 7


  42:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  43:src/riscv.cpp ****                 break;
  44:src/riscv.cpp ****             case 0x11: // thread_create
  45:src/riscv.cpp ****                 // Calling the function createThread which will allocate memory for a TCB and retur
  46:src/riscv.cpp ****                 // Inside of the TCB constructor, memory will be allocated for stack and the thread
  47:src/riscv.cpp ****                 // be put inside of a scheduler
  48:src/riscv.cpp ****                 // argument[1] is TCB** because that's how system call thread_create is defined.
  49:src/riscv.cpp ****                 *((uint64*)argument[1]) = (uint64)TCB::createThread((TCB::Body) argument[2], (TCB::
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****                 if (argument[1] == 0)
  52:src/riscv.cpp ****                     return_val = -1;
  53:src/riscv.cpp ****                 else return_val = 0;
  54:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  55:src/riscv.cpp ****                 break;
  56:src/riscv.cpp ****             case 0x12: // thread_exit
  57:src/riscv.cpp ****                 TCB::exit();
  58:src/riscv.cpp ****                 return_val = 0;
  59:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  60:src/riscv.cpp ****                 break;
  61:src/riscv.cpp ****             case 0x13: // thread_dispatch
  62:src/riscv.cpp ****                 TCB::timeSliceCounter = 0;
  63:src/riscv.cpp ****                 TCB::dispatch();
  64:src/riscv.cpp ****                 break;
  65:src/riscv.cpp ****             case 0x14: // thread_join
  66:src/riscv.cpp ****                 TCB::join((TCB*)argument[1]);
  67:src/riscv.cpp ****                 break;
  68:src/riscv.cpp ****             case 0x21: // sem_open
  69:src/riscv.cpp ****                 return_val = *(uint64*)argument[1] = (uint64)(new _sem((int)argument[2]));
  70:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
  71:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  72:src/riscv.cpp ****                 break;
  73:src/riscv.cpp ****             case 0x22: // sem_close
  74:src/riscv.cpp ****                 return_val = ((_sem*)argument[1])->close();
  75:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  76:src/riscv.cpp ****                 break;
  77:src/riscv.cpp ****             case 0x23: // sem_wait
  78:src/riscv.cpp ****                 return_val = ((_sem*)argument[1])->wait();
  79:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  80:src/riscv.cpp ****                 break;
  81:src/riscv.cpp ****             case 0x24: // sem_signal
  82:src/riscv.cpp ****                 return_val = ((_sem*)argument[1])->signal();
  83:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  84:src/riscv.cpp ****                 break;
  85:src/riscv.cpp ****             case 0x31: // time_sleep
  86:src/riscv.cpp ****                 return_val = (uint64)sleeping::put(TCB::running, (int)argument[1]);
  87:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // we have to set it to 0 because we are dispatching wit
  88:src/riscv.cpp ****                 TCB::dispatch();
  89:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  90:src/riscv.cpp ****                 break;
  91:src/riscv.cpp ****             case 0x41: // getc
  92:src/riscv.cpp ****                 return_val = (uint64)ConsoleKernel::getc();
  93:src/riscv.cpp ****                 //return_val = __getc();
  94:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
  95:src/riscv.cpp ****                 break;
  96:src/riscv.cpp ****             case 0x42: // putc
  97:src/riscv.cpp ****                 //__putc((char)argument[1]);
  98:src/riscv.cpp ****                 ConsoleKernel::putc((char)argument[1]);
GAS LISTING /tmp/ccPe5w3o.s 			page 8


  99:src/riscv.cpp ****                 break;
 100:src/riscv.cpp ****             default:  // wrong function code
 101:src/riscv.cpp ****                 //__putc('c')
 102:src/riscv.cpp ****                 ConsoleKernel::putc('c');
 103:src/riscv.cpp ****                 break;
 104:src/riscv.cpp ****         }
 105:src/riscv.cpp ****     }
 106:src/riscv.cpp ****     else { // unresolved trap number
 107:src/riscv.cpp ****         //__putc('e');
 108:src/riscv.cpp ****         ConsoleKernel::putc('e');
 228              		.loc 1 108 9 is_stmt 1
 229              		.loc 1 108 28 is_stmt 0
 230 00b8 13055006 		li	a0,101
 231 00bc 97000000 		call	_ZN13ConsoleKernel4putcEc@plt
 231      E7800000 
 232              	.LVL0:
 233              	.L3:
 234              	.LBE54:
 109:src/riscv.cpp ****         // printInteger(scause);
 110:src/riscv.cpp ****     }
 111:src/riscv.cpp ****     w_sepc(sepc);
 235              		.loc 1 111 5 is_stmt 1
 236              		.loc 1 111 11 is_stmt 0
 237 00c4 833784FD 		ld	a5,-40(s0)
 238              	.LVL1:
 239              	.LBB61:
 240              	.LBB62:
  49:src/../h/riscv.hpp ****     }
 241              		.loc 2 49 9 is_stmt 1
  49:src/../h/riscv.hpp ****     }
 242              		.loc 2 49 67 is_stmt 0
 243              	#APP
 244              	# 49 "src/../h/riscv.hpp" 1
 245              		csrw sepc, a5
 246              	# 0 "" 2
 247              	.LVL2:
 248              	#NO_APP
 249              	.LBE62:
 250              	.LBE61:
 112:src/riscv.cpp ****     w_sstatus(sstatus);
 251              		.loc 1 112 5 is_stmt 1
 252              		.loc 1 112 14 is_stmt 0
 253 00cc 833704FD 		ld	a5,-48(s0)
 254              	.LVL3:
 255              	.LBB63:
 256              	.LBB64:
  70:src/../h/riscv.hpp ****     }
  71:src/../h/riscv.hpp ****     //write sstatus register
  72:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus){
  73:src/../h/riscv.hpp ****         __asm__ volatile("csrw sstatus, %[sstatus]": : [sstatus] "r"(sstatus));
 257              		.loc 2 73 9 is_stmt 1
 258              		.loc 2 73 79 is_stmt 0
 259              	#APP
 260              	# 73 "src/../h/riscv.hpp" 1
  74              	    }
 261              		csrw sstatus, a5
 262              	# 0 "" 2
GAS LISTING /tmp/ccPe5w3o.s 			page 9


 263              	.LVL4:
 264              	#NO_APP
 265              	.LBE64:
 266              	.LBE63:
 113:src/riscv.cpp **** }
 267              		.loc 1 113 1
 268 00d4 83308107 		ld	ra,120(sp)
 269              		.cfi_remember_state
 270              		.cfi_restore 1
 271 00d8 03340107 		ld	s0,112(sp)
 272              		.cfi_restore 8
 273              		.cfi_def_cfa 2, 128
 274 00dc 83348106 		ld	s1,104(sp)
 275              		.cfi_restore 9
 276 00e0 13010108 		addi	sp,sp,128
 277              		.cfi_def_cfa_offset 0
 278 00e4 67800000 		jr	ra
 279              	.L18:
 280              		.cfi_restore_state
 281              	.LBB65:
 282              	.LBB60:
  34:src/riscv.cpp ****                 return_val = (uint64)MemoryAllocator::mem_alloc((size_t)argument[1]);
 283              		.loc 1 34 13 is_stmt 1
  35:src/riscv.cpp ****                 //return_val = (uint64)__mem_alloc((size_t)argument[1]);
 284              		.loc 1 35 17
  35:src/riscv.cpp ****                 //return_val = (uint64)__mem_alloc((size_t)argument[1]);
 285              		.loc 1 35 83 is_stmt 0
 286 00e8 033584FA 		ld	a0,-88(s0)
  35:src/riscv.cpp ****                 //return_val = (uint64)__mem_alloc((size_t)argument[1]);
 287              		.loc 1 35 64
 288 00ec 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 288      E7800000 
 289              	.LVL5:
  35:src/riscv.cpp ****                 //return_val = (uint64)__mem_alloc((size_t)argument[1]);
 290              		.loc 1 35 28
 291 00f4 2330A4F8 		sd	a0,-128(s0)
  37:src/riscv.cpp ****                 break;
 292              		.loc 1 37 17 is_stmt 1
  37:src/riscv.cpp ****                 break;
 293              		.loc 1 37 58 is_stmt 0
 294 00f8 833704F8 		ld	a5,-128(s0)
  37:src/riscv.cpp ****                 break;
 295              		.loc 1 37 70
 296              	#APP
 297              	# 37 "src/riscv.cpp" 1
  38:src/riscv.cpp ****             case 0x02: // mem_free
 298              		sd a5, 10*8(fp)
 299              	# 0 "" 2
 300              		.loc 1 38 17 is_stmt 1
 301              	#NO_APP
 302 0100 6FF05FFC 		j	.L3
 303              	.L17:
  39:src/riscv.cpp ****                 return_val = (uint64)MemoryAllocator::mem_free((void*)argument[1]);
 304              		.loc 1 39 13
  40:src/riscv.cpp ****                 //return_val = (uint64)__mem_free((void*)argument[1]);
 305              		.loc 1 40 17
  40:src/riscv.cpp ****                 //return_val = (uint64)__mem_free((void*)argument[1]);
GAS LISTING /tmp/ccPe5w3o.s 			page 10


 306              		.loc 1 40 81 is_stmt 0
 307 0104 033584FA 		ld	a0,-88(s0)
  40:src/riscv.cpp ****                 //return_val = (uint64)__mem_free((void*)argument[1]);
 308              		.loc 1 40 63
 309 0108 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 309      E7800000 
 310              	.LVL6:
  40:src/riscv.cpp ****                 //return_val = (uint64)__mem_free((void*)argument[1]);
 311              		.loc 1 40 28
 312 0110 2330A4F8 		sd	a0,-128(s0)
  42:src/riscv.cpp ****                 break;
 313              		.loc 1 42 17 is_stmt 1
  42:src/riscv.cpp ****                 break;
 314              		.loc 1 42 58 is_stmt 0
 315 0114 833704F8 		ld	a5,-128(s0)
  42:src/riscv.cpp ****                 break;
 316              		.loc 1 42 70
 317              	#APP
 318              	# 42 "src/riscv.cpp" 1
  43:src/riscv.cpp ****             case 0x11: // thread_create
 319              		sd a5, 10*8(fp)
 320              	# 0 "" 2
 321              		.loc 1 43 17 is_stmt 1
 322              	#NO_APP
 323 011c 6FF09FFA 		j	.L3
 324              	.L16:
  44:src/riscv.cpp ****                 // Calling the function createThread which will allocate memory for a TCB and retur
 325              		.loc 1 44 13
  49:src/riscv.cpp **** 
 326              		.loc 1 49 17
  49:src/riscv.cpp **** 
 327              		.loc 1 49 91 is_stmt 0
 328 0120 033504FB 		ld	a0,-80(s0)
  49:src/riscv.cpp **** 
 329              		.loc 1 49 120
 330 0124 833584FB 		ld	a1,-72(s0)
  49:src/riscv.cpp **** 
 331              		.loc 1 49 142
 332 0128 033604FC 		ld	a2,-64(s0)
  49:src/riscv.cpp **** 
 333              		.loc 1 49 68
 334 012c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Ph@plt
 334      E7800000 
 335              	.LVL7:
  49:src/riscv.cpp **** 
 336              		.loc 1 49 38
 337 0134 833784FA 		ld	a5,-88(s0)
  49:src/riscv.cpp **** 
 338              		.loc 1 49 41
 339 0138 23B0A700 		sd	a0,0(a5)
  51:src/riscv.cpp ****                     return_val = -1;
 340              		.loc 1 51 17 is_stmt 1
  51:src/riscv.cpp ****                     return_val = -1;
 341              		.loc 1 51 31 is_stmt 0
 342 013c 833784FA 		ld	a5,-88(s0)
  51:src/riscv.cpp ****                     return_val = -1;
 343              		.loc 1 51 17
GAS LISTING /tmp/ccPe5w3o.s 			page 11


 344 0140 639C0700 		bnez	a5,.L19
  52:src/riscv.cpp ****                 else return_val = 0;
 345              		.loc 1 52 21 is_stmt 1
  52:src/riscv.cpp ****                 else return_val = 0;
 346              		.loc 1 52 32 is_stmt 0
 347 0144 9307F0FF 		li	a5,-1
 348 0148 2330F4F8 		sd	a5,-128(s0)
 349              	.L20:
  54:src/riscv.cpp ****                 break;
 350              		.loc 1 54 17 is_stmt 1
  54:src/riscv.cpp ****                 break;
 351              		.loc 1 54 58 is_stmt 0
 352 014c 833704F8 		ld	a5,-128(s0)
  54:src/riscv.cpp ****                 break;
 353              		.loc 1 54 70
 354              	#APP
 355              	# 54 "src/riscv.cpp" 1
  55:src/riscv.cpp ****             case 0x12: // thread_exit
 356              		sd a5, 10*8(fp)
 357              	# 0 "" 2
 358              		.loc 1 55 17 is_stmt 1
 359              	#NO_APP
 360 0154 6FF01FF7 		j	.L3
 361              	.L19:
  53:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 362              		.loc 1 53 22
  53:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 363              		.loc 1 53 33 is_stmt 0
 364 0158 233004F8 		sd	zero,-128(s0)
 365 015c 6FF01FFF 		j	.L20
 366              	.L15:
  56:src/riscv.cpp ****                 TCB::exit();
 367              		.loc 1 56 13 is_stmt 1
  57:src/riscv.cpp ****                 return_val = 0;
 368              		.loc 1 57 17
  57:src/riscv.cpp ****                 return_val = 0;
 369              		.loc 1 57 26 is_stmt 0
 370 0160 97000000 		call	_ZN3TCB4exitEv@plt
 370      E7800000 
 371              	.LVL8:
  58:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 372              		.loc 1 58 17 is_stmt 1
  58:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 373              		.loc 1 58 28 is_stmt 0
 374 0168 233004F8 		sd	zero,-128(s0)
  59:src/riscv.cpp ****                 break;
 375              		.loc 1 59 17 is_stmt 1
  59:src/riscv.cpp ****                 break;
 376              		.loc 1 59 58 is_stmt 0
 377 016c 833704F8 		ld	a5,-128(s0)
  59:src/riscv.cpp ****                 break;
 378              		.loc 1 59 70
 379              	#APP
 380              	# 59 "src/riscv.cpp" 1
  60:src/riscv.cpp ****             case 0x13: // thread_dispatch
 381              		sd a5, 10*8(fp)
 382              	# 0 "" 2
GAS LISTING /tmp/ccPe5w3o.s 			page 12


 383              		.loc 1 60 17 is_stmt 1
 384              	#NO_APP
 385 0174 6FF01FF5 		j	.L3
 386              	.L14:
  61:src/riscv.cpp ****                 TCB::timeSliceCounter = 0;
 387              		.loc 1 61 13
  62:src/riscv.cpp ****                 TCB::dispatch();
 388              		.loc 1 62 17
  62:src/riscv.cpp ****                 TCB::dispatch();
 389              		.loc 1 62 39 is_stmt 0
 390 0178 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 390      83B70700 
 391 0180 23B00700 		sd	zero,0(a5)
  63:src/riscv.cpp ****                 break;
 392              		.loc 1 63 17 is_stmt 1
  63:src/riscv.cpp ****                 break;
 393              		.loc 1 63 30 is_stmt 0
 394 0184 97000000 		call	_ZN3TCB8dispatchEv@plt
 394      E7800000 
 395              	.LVL9:
  64:src/riscv.cpp ****             case 0x14: // thread_join
 396              		.loc 1 64 17 is_stmt 1
 397 018c 6FF09FF3 		j	.L3
 398              	.L13:
  65:src/riscv.cpp ****                 TCB::join((TCB*)argument[1]);
 399              		.loc 1 65 13
  66:src/riscv.cpp ****                 break;
 400              		.loc 1 66 17
  66:src/riscv.cpp ****                 break;
 401              		.loc 1 66 43 is_stmt 0
 402 0190 033584FA 		ld	a0,-88(s0)
  66:src/riscv.cpp ****                 break;
 403              		.loc 1 66 26
 404 0194 97000000 		call	_ZN3TCB4joinEPS_@plt
 404      E7800000 
 405              	.LVL10:
  67:src/riscv.cpp ****             case 0x21: // sem_open
 406              		.loc 1 67 17 is_stmt 1
 407 019c 6FF09FF2 		j	.L3
 408              	.L12:
  68:src/riscv.cpp ****                 return_val = *(uint64*)argument[1] = (uint64)(new _sem((int)argument[2]));
 409              		.loc 1 68 13
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 410              		.loc 1 69 17
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 411              		.loc 1 69 87 is_stmt 0
 412 01a0 833404FB 		ld	s1,-80(s0)
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 413              		.loc 1 69 72
 414 01a4 9B840400 		sext.w	s1,s1
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 415              		.loc 1 69 88
 416 01a8 13058001 		li	a0,24
 417 01ac 97000000 		call	_Znwm@plt
 417      E7800000 
 418              	.LVL11:
 419              	.LBB56:
GAS LISTING /tmp/ccPe5w3o.s 			page 13


 420              	.LBB57:
 421              		.file 3 "src/../h/_sem.hpp"
   1:src/../h/_sem.hpp **** //
   2:src/../h/_sem.hpp **** // Created by os on 6/23/23.
   3:src/../h/_sem.hpp **** //
   4:src/../h/_sem.hpp **** 
   5:src/../h/_sem.hpp **** #ifndef PROJECT_BASE_V1_1__SEM_HPP
   6:src/../h/_sem.hpp **** #define PROJECT_BASE_V1_1__SEM_HPP
   7:src/../h/_sem.hpp **** #include "list.hpp"
   8:src/../h/_sem.hpp **** #include "TCB.hpp"
   9:src/../h/_sem.hpp **** class _sem{
  10:src/../h/_sem.hpp **** public:
  11:src/../h/_sem.hpp ****     _sem(int init): val(init), closed(false){}
 422              		.loc 3 11 44
 423 01b4 23209500 		sw	s1,0(a0)
 424 01b8 23020500 		sb	zero,4(a0)
 425              	.LVL12:
 426              	.LBB58:
 427              	.LBB59:
 428              		.file 4 "src/../h/list.hpp"
   1:src/../h/list.hpp **** //
   2:src/../h/list.hpp **** // Created by os on 5/13/23.
   3:src/../h/list.hpp **** //
   4:src/../h/list.hpp **** 
   5:src/../h/list.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/list.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/list.hpp **** 
   8:src/../h/list.hpp **** //ideja za klasu je delimicno preuzeta sa online vezbi 7
   9:src/../h/list.hpp **** class TCB;
  10:src/../h/list.hpp **** 
  11:src/../h/list.hpp **** class List{
  12:src/../h/list.hpp ****     TCB* head;
  13:src/../h/list.hpp ****     TCB* tail;
  14:src/../h/list.hpp **** public:
  15:src/../h/list.hpp ****     List() : head(0), tail(0) {}
 429              		.loc 4 15 29
 430 01bc 23340500 		sd	zero,8(a0)
 431 01c0 23380500 		sd	zero,16(a0)
 432              	.LVL13:
 433              	.LBE59:
 434              	.LBE58:
 435              	.LBE57:
 436              	.LBE56:
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 437              		.loc 1 69 50
 438 01c4 833784FA 		ld	a5,-88(s0)
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 439              		.loc 1 69 52
 440 01c8 23B0A700 		sd	a0,0(a5)
  69:src/riscv.cpp ****                 return_val = (return_val == 0)? -1: 0;
 441              		.loc 1 69 28
 442 01cc 2330A4F8 		sd	a0,-128(s0)
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 443              		.loc 1 70 17 is_stmt 1
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 444              		.loc 1 70 42 is_stmt 0
 445 01d0 833704F8 		ld	a5,-128(s0)
GAS LISTING /tmp/ccPe5w3o.s 			page 14


  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 446              		.loc 1 70 47
 447 01d4 639C0700 		bnez	a5,.L22
 448 01d8 9307F0FF 		li	a5,-1
 449              	.L21:
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 450              		.loc 1 70 28 discriminator 4
 451 01dc 2330F4F8 		sd	a5,-128(s0)
  71:src/riscv.cpp ****                 break;
 452              		.loc 1 71 17 is_stmt 1 discriminator 4
  71:src/riscv.cpp ****                 break;
 453              		.loc 1 71 58 is_stmt 0 discriminator 4
 454 01e0 833704F8 		ld	a5,-128(s0)
  71:src/riscv.cpp ****                 break;
 455              		.loc 1 71 70 discriminator 4
 456              	#APP
 457              	# 71 "src/riscv.cpp" 1
  72:src/riscv.cpp ****             case 0x22: // sem_close
 458              		sd a5, 10*8(fp)
 459              	# 0 "" 2
 460              		.loc 1 72 17 is_stmt 1 discriminator 4
 461              	#NO_APP
 462 01e8 6FF0DFED 		j	.L3
 463              	.L22:
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 464              		.loc 1 70 47 is_stmt 0
 465 01ec 93070000 		li	a5,0
 466 01f0 6FF0DFFE 		j	.L21
 467              	.L11:
  73:src/riscv.cpp ****                 return_val = ((_sem*)argument[1])->close();
 468              		.loc 1 73 13 is_stmt 1
  74:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 469              		.loc 1 74 17
  74:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 470              		.loc 1 74 48 is_stmt 0
 471 01f4 033584FA 		ld	a0,-88(s0)
  74:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 472              		.loc 1 74 57
 473 01f8 97000000 		call	_ZN4_sem5closeEv@plt
 473      E7800000 
 474              	.LVL14:
  74:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 475              		.loc 1 74 28
 476 0200 2330A4F8 		sd	a0,-128(s0)
  75:src/riscv.cpp ****                 break;
 477              		.loc 1 75 17 is_stmt 1
  75:src/riscv.cpp ****                 break;
 478              		.loc 1 75 58 is_stmt 0
 479 0204 833704F8 		ld	a5,-128(s0)
  75:src/riscv.cpp ****                 break;
 480              		.loc 1 75 70
 481              	#APP
 482              	# 75 "src/riscv.cpp" 1
  76:src/riscv.cpp ****             case 0x23: // sem_wait
 483              		sd a5, 10*8(fp)
 484              	# 0 "" 2
 485              		.loc 1 76 17 is_stmt 1
GAS LISTING /tmp/ccPe5w3o.s 			page 15


 486              	#NO_APP
 487 020c 6FF09FEB 		j	.L3
 488              	.L10:
  77:src/riscv.cpp ****                 return_val = ((_sem*)argument[1])->wait();
 489              		.loc 1 77 13
  78:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 490              		.loc 1 78 17
  78:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 491              		.loc 1 78 48 is_stmt 0
 492 0210 033584FA 		ld	a0,-88(s0)
  78:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 493              		.loc 1 78 56
 494 0214 97000000 		call	_ZN4_sem4waitEv@plt
 494      E7800000 
 495              	.LVL15:
  78:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 496              		.loc 1 78 28
 497 021c 2330A4F8 		sd	a0,-128(s0)
  79:src/riscv.cpp ****                 break;
 498              		.loc 1 79 17 is_stmt 1
  79:src/riscv.cpp ****                 break;
 499              		.loc 1 79 58 is_stmt 0
 500 0220 833704F8 		ld	a5,-128(s0)
  79:src/riscv.cpp ****                 break;
 501              		.loc 1 79 70
 502              	#APP
 503              	# 79 "src/riscv.cpp" 1
  80:src/riscv.cpp ****             case 0x24: // sem_signal
 504              		sd a5, 10*8(fp)
 505              	# 0 "" 2
 506              		.loc 1 80 17 is_stmt 1
 507              	#NO_APP
 508 0228 6FF0DFE9 		j	.L3
 509              	.L9:
  81:src/riscv.cpp ****                 return_val = ((_sem*)argument[1])->signal();
 510              		.loc 1 81 13
  82:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 511              		.loc 1 82 17
  82:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 512              		.loc 1 82 48 is_stmt 0
 513 022c 033584FA 		ld	a0,-88(s0)
  82:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 514              		.loc 1 82 58
 515 0230 97000000 		call	_ZN4_sem6signalEv@plt
 515      E7800000 
 516              	.LVL16:
  82:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 517              		.loc 1 82 28
 518 0238 2330A4F8 		sd	a0,-128(s0)
  83:src/riscv.cpp ****                 break;
 519              		.loc 1 83 17 is_stmt 1
  83:src/riscv.cpp ****                 break;
 520              		.loc 1 83 58 is_stmt 0
 521 023c 833704F8 		ld	a5,-128(s0)
  83:src/riscv.cpp ****                 break;
 522              		.loc 1 83 70
 523              	#APP
GAS LISTING /tmp/ccPe5w3o.s 			page 16


 524              	# 83 "src/riscv.cpp" 1
  84:src/riscv.cpp ****             case 0x31: // time_sleep
 525              		sd a5, 10*8(fp)
 526              	# 0 "" 2
 527              		.loc 1 84 17 is_stmt 1
 528              	#NO_APP
 529 0244 6FF01FE8 		j	.L3
 530              	.L8:
  85:src/riscv.cpp ****                 return_val = (uint64)sleeping::put(TCB::running, (int)argument[1]);
 531              		.loc 1 85 13
  86:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // we have to set it to 0 because we are dispatching wit
 532              		.loc 1 86 17
  86:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // we have to set it to 0 because we are dispatching wit
 533              		.loc 1 86 81 is_stmt 0
 534 0248 833584FA 		ld	a1,-88(s0)
  86:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // we have to set it to 0 because we are dispatching wit
 535              		.loc 1 86 51
 536 024c 9B850500 		sext.w	a1,a1
 537 0250 97070000 		la	a5,_ZN3TCB7runningE
 537      83B70700 
 538 0258 03B50700 		ld	a0,0(a5)
 539 025c 97000000 		call	_ZN8sleeping3putEP3TCBi@plt
 539      E7800000 
 540              	.LVL17:
  86:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // we have to set it to 0 because we are dispatching wit
 541              		.loc 1 86 28
 542 0264 2330A4F8 		sd	a0,-128(s0)
  87:src/riscv.cpp ****                 TCB::dispatch();
 543              		.loc 1 87 17 is_stmt 1
  87:src/riscv.cpp ****                 TCB::dispatch();
 544              		.loc 1 87 39 is_stmt 0
 545 0268 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 545      83B70700 
 546 0270 23B00700 		sd	zero,0(a5)
  88:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 547              		.loc 1 88 17 is_stmt 1
  88:src/riscv.cpp ****                 __asm__ volatile("sd %0, 10*8(fp)": :"r"(return_val));
 548              		.loc 1 88 30 is_stmt 0
 549 0274 97000000 		call	_ZN3TCB8dispatchEv@plt
 549      E7800000 
 550              	.LVL18:
  89:src/riscv.cpp ****                 break;
 551              		.loc 1 89 17 is_stmt 1
  89:src/riscv.cpp ****                 break;
 552              		.loc 1 89 58 is_stmt 0
 553 027c 833704F8 		ld	a5,-128(s0)
  89:src/riscv.cpp ****                 break;
 554              		.loc 1 89 70
 555              	#APP
 556              	# 89 "src/riscv.cpp" 1
  90:src/riscv.cpp ****             case 0x41: // getc
 557              		sd a5, 10*8(fp)
 558              	# 0 "" 2
 559              		.loc 1 90 17 is_stmt 1
 560              	#NO_APP
 561 0284 6FF01FE4 		j	.L3
 562              	.L7:
GAS LISTING /tmp/ccPe5w3o.s 			page 17


  91:src/riscv.cpp ****                 return_val = (uint64)ConsoleKernel::getc();
 563              		.loc 1 91 13
  92:src/riscv.cpp ****                 //return_val = __getc();
 564              		.loc 1 92 17
  92:src/riscv.cpp ****                 //return_val = __getc();
 565              		.loc 1 92 57 is_stmt 0
 566 0288 97000000 		call	_ZN13ConsoleKernel4getcEv@plt
 566      E7800000 
 567              	.LVL19:
  92:src/riscv.cpp ****                 //return_val = __getc();
 568              		.loc 1 92 28
 569 0290 2330A4F8 		sd	a0,-128(s0)
  94:src/riscv.cpp ****                 break;
 570              		.loc 1 94 17 is_stmt 1
  94:src/riscv.cpp ****                 break;
 571              		.loc 1 94 58 is_stmt 0
 572 0294 833704F8 		ld	a5,-128(s0)
  94:src/riscv.cpp ****                 break;
 573              		.loc 1 94 70
 574              	#APP
 575              	# 94 "src/riscv.cpp" 1
  95:src/riscv.cpp ****             case 0x42: // putc
 576              		sd a5, 10*8(fp)
 577              	# 0 "" 2
 578              		.loc 1 95 17 is_stmt 1
 579              	#NO_APP
 580 029c 6FF09FE2 		j	.L3
 581              	.L5:
  96:src/riscv.cpp ****                 //__putc((char)argument[1]);
 582              		.loc 1 96 13
  98:src/riscv.cpp ****                 break;
 583              		.loc 1 98 17
  98:src/riscv.cpp ****                 break;
 584              		.loc 1 98 53 is_stmt 0
 585 02a0 033584FA 		ld	a0,-88(s0)
  98:src/riscv.cpp ****                 break;
 586              		.loc 1 98 36
 587 02a4 1375F50F 		andi	a0,a0,0xff
 588 02a8 97000000 		call	_ZN13ConsoleKernel4putcEc@plt
 588      E7800000 
 589              	.LVL20:
  99:src/riscv.cpp ****             default:  // wrong function code
 590              		.loc 1 99 17 is_stmt 1
 591 02b0 6FF05FE1 		j	.L3
 592              	.L4:
 100:src/riscv.cpp ****                 //__putc('c')
 593              		.loc 1 100 13
 102:src/riscv.cpp ****                 break;
 594              		.loc 1 102 17
 102:src/riscv.cpp ****                 break;
 595              		.loc 1 102 36 is_stmt 0
 596 02b4 13053006 		li	a0,99
 597 02b8 97000000 		call	_ZN13ConsoleKernel4putcEc@plt
 597      E7800000 
 598              	.LVL21:
 103:src/riscv.cpp ****         }
 599              		.loc 1 103 17 is_stmt 1
GAS LISTING /tmp/ccPe5w3o.s 			page 18


 600 02c0 6FF05FE0 		j	.L3
 601              	.LBE60:
 602              	.LBE65:
 603              		.cfi_endproc
 604              	.LFE57:
 606              		.align	2
 607              		.globl	_ZN5riscv21timerInterruptHandlerEv
 609              	_ZN5riscv21timerInterruptHandlerEv:
 610              	.LFB58:
 114:src/riscv.cpp **** void riscv::timerInterruptHandler(){// timer
 611              		.loc 1 114 36
 612              		.cfi_startproc
 613 02c4 130101FD 		addi	sp,sp,-48
 614              		.cfi_def_cfa_offset 48
 615 02c8 23341102 		sd	ra,40(sp)
 616 02cc 23308102 		sd	s0,32(sp)
 617              		.cfi_offset 1, -8
 618              		.cfi_offset 8, -16
 619 02d0 13040103 		addi	s0,sp,48
 620              		.cfi_def_cfa 8, 0
 115:src/riscv.cpp ****     volatile uint64 sepc = riscv::r_sepc();
 621              		.loc 1 115 5
 622              	.LBB66:
 623              	.LBB67:
  43:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 624              		.loc 2 43 9
  44:src/../h/riscv.hpp ****         return sepc;
 625              		.loc 2 44 9
  44:src/../h/riscv.hpp ****         return sepc;
 626              		.loc 2 44 67 is_stmt 0
 627              	#APP
 628              	# 44 "src/../h/riscv.hpp" 1
 629              		csrr a5, sepc
 630              	# 0 "" 2
 631              	#NO_APP
 632 02d8 233CF4FC 		sd	a5,-40(s0)
  45:src/../h/riscv.hpp ****     }
 633              		.loc 2 45 9 is_stmt 1
  45:src/../h/riscv.hpp ****     }
 634              		.loc 2 45 16 is_stmt 0
 635 02dc 833784FD 		ld	a5,-40(s0)
 636              	.LBE67:
 637              	.LBE66:
 638              		.loc 1 115 42
 639 02e0 2334F4FE 		sd	a5,-24(s0)
 116:src/riscv.cpp ****     volatile uint64 sstatus = riscv::r_sstatus();
 640              		.loc 1 116 5 is_stmt 1
 641              	.LBB68:
 642              	.LBB69:
  67:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 643              		.loc 2 67 9
  68:src/../h/riscv.hpp ****         return sstatus;
 644              		.loc 2 68 9
  68:src/../h/riscv.hpp ****         return sstatus;
 645              		.loc 2 68 79 is_stmt 0
 646              	#APP
 647              	# 68 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccPe5w3o.s 			page 19


 648              		csrr a5, sstatus
 649              	# 0 "" 2
 650              	#NO_APP
 651 02e8 2338F4FC 		sd	a5,-48(s0)
  69:src/../h/riscv.hpp ****     }
 652              		.loc 2 69 9 is_stmt 1
  69:src/../h/riscv.hpp ****     }
 653              		.loc 2 69 16 is_stmt 0
 654 02ec 833704FD 		ld	a5,-48(s0)
 655              	.LBE69:
 656              	.LBE68:
 657              		.loc 1 116 48
 658 02f0 2330F4FE 		sd	a5,-32(s0)
 117:src/riscv.cpp **** 
 118:src/riscv.cpp ****     TCB::timeSliceCounter++;
 659              		.loc 1 118 5 is_stmt 1
 660              		.loc 1 118 26 is_stmt 0
 661 02f4 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 661      03370700 
 662 02fc 83370700 		ld	a5,0(a4)
 663 0300 93871700 		addi	a5,a5,1
 664 0304 2330F700 		sd	a5,0(a4)
 119:src/riscv.cpp ****     sleeping::timeDecrease();
 665              		.loc 1 119 5 is_stmt 1
 666              		.loc 1 119 27 is_stmt 0
 667 0308 97000000 		call	_ZN8sleeping12timeDecreaseEv@plt
 667      E7800000 
 668              	.LVL22:
 120:src/riscv.cpp ****     if(TCB::running!=nullptr) {
 669              		.loc 1 120 5 is_stmt 1
 670              		.loc 1 120 20 is_stmt 0
 671 0310 97070000 		la	a5,_ZN3TCB7runningE
 671      83B70700 
 672 0318 83B70700 		ld	a5,0(a5)
 673              		.loc 1 120 5
 674 031c 638C0700 		beqz	a5,.L26
 121:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 675              		.loc 1 121 9 is_stmt 1
 676              	.LVL23:
 677              	.LBB70:
 678              	.LBB71:
 679              		.file 5 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 6/20/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJECT_BASE_V1_1_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJECT_BASE_V1_1_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "syscall_c.hpp"
  10:src/../h/TCB.hpp **** #include "../h/Scheduler.hpp"
  11:src/../h/TCB.hpp **** #include "list.hpp"
  12:src/../h/TCB.hpp **** 
  13:src/../h/TCB.hpp **** // ideja za klasu preuzeta sa vezbi
  14:src/../h/TCB.hpp **** class TCB {
  15:src/../h/TCB.hpp **** public:
GAS LISTING /tmp/ccPe5w3o.s 			page 20


  16:src/../h/TCB.hpp ****     TCB* next;
  17:src/../h/TCB.hpp ****     enum State{FINISHED, RUNNING, BLOCKED, SLEEPING};
  18:src/../h/TCB.hpp ****     using Body = void(*)(void*);
  19:src/../h/TCB.hpp ****     using Argument = void*;
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp ****     static TCB* createThread(Body body, Argument argument, uint8* st);
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     // Finished
  24:src/../h/TCB.hpp ****     bool isFinished() const{ return this->state == FINISHED; }
  25:src/../h/TCB.hpp ****     void setFinished(bool finished){ this->state = finished? FINISHED:RUNNING; }
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     // Blocked
  28:src/../h/TCB.hpp ****     bool isBlocked() const { return this->state == BLOCKED; }
  29:src/../h/TCB.hpp ****     void setBlocked(bool blocked) { this->state = blocked?BLOCKED:RUNNING; }
  30:src/../h/TCB.hpp **** 
  31:src/../h/TCB.hpp ****     // Sleeping
  32:src/../h/TCB.hpp ****     bool isSleeping() const { return this->state == SLEEPING;}
  33:src/../h/TCB.hpp ****     void setSleeping(bool sleeping) { this->state = sleeping?SLEEPING:RUNNING; }
  34:src/../h/TCB.hpp **** 
  35:src/../h/TCB.hpp ****     // Running
  36:src/../h/TCB.hpp ****     bool isRunning(){ return this->state == RUNNING;}
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp ****     // Sleep time
  39:src/../h/TCB.hpp ****     void setSleepTime(int time1) { this->sleep_time = time1; }
  40:src/../h/TCB.hpp ****     int getSleepTime() { return this->sleep_time; }
  41:src/../h/TCB.hpp **** 
  42:src/../h/TCB.hpp ****     // System access
  43:src/../h/TCB.hpp ****     void setSystemAccessFlag(){ this->systemAccessFlag = true; }
  44:src/../h/TCB.hpp ****     bool getSystemAccessFlag(){ return this->systemAccessFlag; }
  45:src/../h/TCB.hpp **** 
  46:src/../h/TCB.hpp ****     uint64 getTimeSlice() const{
  47:src/../h/TCB.hpp ****         return t_slice;
 680              		.loc 5 47 9
 681              		.loc 5 47 16 is_stmt 0
 682 0320 83B70702 		ld	a5,32(a5)
 683              	.LVL24:
 684              	.LBE71:
 685              	.LBE70:
 686              		.loc 1 121 35
 687 0324 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 687      03370700 
 688 032c 03370700 		ld	a4,0(a4)
 689              		.loc 1 121 9
 690 0330 6376F702 		bgeu	a4,a5,.L28
 691              	.L26:
 122:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 123:src/riscv.cpp ****             TCB::dispatch();
 124:src/riscv.cpp ****         }
 125:src/riscv.cpp ****     }
 126:src/riscv.cpp ****     mc_sip(SIP_SSIP); // signal da je prekid obradjen
 692              		.loc 1 126 5 is_stmt 1
 693              	.LVL25:
 694              	.LBB72:
 695              	.LBB73:
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     //read stvec register
  77:src/../h/riscv.hpp ****     static uint64 r_stvec(){
GAS LISTING /tmp/ccPe5w3o.s 			page 21


  78:src/../h/riscv.hpp ****         uint64 volatile stvec;
  79:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  80:src/../h/riscv.hpp ****         return stvec;
  81:src/../h/riscv.hpp ****     }
  82:src/../h/riscv.hpp ****     //write stvec register
  83:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec){
  84:src/../h/riscv.hpp ****         __asm__ volatile("csrw stvec, %[stvec]": : [stvec] "r"(stvec));
  85:src/../h/riscv.hpp ****     }
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     //read sip register
  88:src/../h/riscv.hpp ****     static uint64 r_sip(){
  89:src/../h/riscv.hpp ****         uint64 volatile sip;
  90:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sip], sip" : [sip] "=r"(sip));
  91:src/../h/riscv.hpp ****         return sip;
  92:src/../h/riscv.hpp ****     }
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write sip register
  95:src/../h/riscv.hpp ****     static void w_sip(uint64 sip){
  96:src/../h/riscv.hpp ****         __asm__ volatile("csrw sip, %[sip]": : [sip] "r"(sip));
  97:src/../h/riscv.hpp ****     }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp ****     //read sie register
 100:src/../h/riscv.hpp ****     static uint64 r_sie(){
 101:src/../h/riscv.hpp ****         uint64 volatile sie;
 102:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sie], sie" : [sie] "=r"(sie));
 103:src/../h/riscv.hpp ****         return sie;
 104:src/../h/riscv.hpp ****     }
 105:src/../h/riscv.hpp ****     //write sie register
 106:src/../h/riscv.hpp ****     static void w_sie(uint64 sie) {
 107:src/../h/riscv.hpp ****         __asm__ volatile("csrw sie, %[sie]": : [sie] "r"(sie));
 108:src/../h/riscv.hpp ****     }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     //read scratch register
 111:src/../h/riscv.hpp ****     static uint64 r_scratch(){
 112:src/../h/riscv.hpp ****         uint64 volatile scratch;
 113:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[scratch], scratch" : [scratch] "=r"(scratch));
 114:src/../h/riscv.hpp ****         return scratch;
 115:src/../h/riscv.hpp ****     }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp ****     //write scratch register
 118:src/../h/riscv.hpp ****     static void w_scratch(uint64 scratch) {
 119:src/../h/riscv.hpp ****         __asm__ volatile("csrw scratch, %[scratch]": : [scratch] "r"(scratch));
 120:src/../h/riscv.hpp ****     }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask) { // mask set sstatus
 123:src/../h/riscv.hpp ****         __asm__ volatile("csrs sstatus, %[mask]"::[mask]"r"(mask));
 124:src/../h/riscv.hpp ****     }
 125:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask){ // mask clear sstatus
 126:src/../h/riscv.hpp ****         __asm__ volatile("csrc sip, %[mask]": : [mask]"r"(mask));
 127:src/../h/riscv.hpp ****     }
 128:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask){ // mask set sip
 129:src/../h/riscv.hpp ****         __asm__ volatile("csrs sstatus, %[mask]"::[mask]"r"(mask));
 130:src/../h/riscv.hpp ****     }
 131:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask){ // mask clear sip
 132:src/../h/riscv.hpp ****         __asm__ volatile("csrc sip, %[mask]": : [mask]"r"(mask));
 696              		.loc 2 132 9
 697              		.loc 2 132 65 is_stmt 0
GAS LISTING /tmp/ccPe5w3o.s 			page 22


 698 0334 93072000 		li	a5,2
 699              	#APP
 700              	# 132 "src/../h/riscv.hpp" 1
 133              	    }
 701              		csrc sip, a5
 702              	# 0 "" 2
 703              	.LVL26:
 704              	#NO_APP
 705              	.LBE73:
 706              	.LBE72:
 127:src/riscv.cpp ****     w_sepc(sepc);
 707              		.loc 1 127 5 is_stmt 1
 708              		.loc 1 127 11 is_stmt 0
 709 033c 833784FE 		ld	a5,-24(s0)
 710              	.LVL27:
 711              	.LBB74:
 712              	.LBB75:
  49:src/../h/riscv.hpp ****     }
 713              		.loc 2 49 9 is_stmt 1
  49:src/../h/riscv.hpp ****     }
 714              		.loc 2 49 67 is_stmt 0
 715              	#APP
 716              	# 49 "src/../h/riscv.hpp" 1
 717              		csrw sepc, a5
 718              	# 0 "" 2
 719              	.LVL28:
 720              	#NO_APP
 721              	.LBE75:
 722              	.LBE74:
 128:src/riscv.cpp ****     w_sstatus(sstatus);
 723              		.loc 1 128 5 is_stmt 1
 724              		.loc 1 128 14 is_stmt 0
 725 0344 833704FE 		ld	a5,-32(s0)
 726              	.LVL29:
 727              	.LBB76:
 728              	.LBB77:
  73:src/../h/riscv.hpp ****     }
 729              		.loc 2 73 9 is_stmt 1
  73:src/../h/riscv.hpp ****     }
 730              		.loc 2 73 79 is_stmt 0
 731              	#APP
 732              	# 73 "src/../h/riscv.hpp" 1
 733              		csrw sstatus, a5
 734              	# 0 "" 2
 735              	.LVL30:
 736              	#NO_APP
 737              	.LBE77:
 738              	.LBE76:
 129:src/riscv.cpp **** }
 739              		.loc 1 129 1
 740 034c 83308102 		ld	ra,40(sp)
 741              		.cfi_remember_state
 742              		.cfi_restore 1
 743 0350 03340102 		ld	s0,32(sp)
 744              		.cfi_restore 8
 745              		.cfi_def_cfa 2, 48
 746 0354 13010103 		addi	sp,sp,48
GAS LISTING /tmp/ccPe5w3o.s 			page 23


 747              		.cfi_def_cfa_offset 0
 748 0358 67800000 		jr	ra
 749              	.L28:
 750              		.cfi_restore_state
 122:src/riscv.cpp ****             TCB::dispatch();
 751              		.loc 1 122 13 is_stmt 1
 122:src/riscv.cpp ****             TCB::dispatch();
 752              		.loc 1 122 35 is_stmt 0
 753 035c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 753      83B70700 
 754 0364 23B00700 		sd	zero,0(a5)
 123:src/riscv.cpp ****         }
 755              		.loc 1 123 13 is_stmt 1
 123:src/riscv.cpp ****         }
 756              		.loc 1 123 26 is_stmt 0
 757 0368 97000000 		call	_ZN3TCB8dispatchEv@plt
 757      E7800000 
 758              	.LVL31:
 759 0370 6FF05FFC 		j	.L26
 760              		.cfi_endproc
 761              	.LFE58:
 763              		.align	2
 764              		.globl	_ZN5riscv23consoleInterruptHandlerEv
 766              	_ZN5riscv23consoleInterruptHandlerEv:
 767              	.LFB59:
 130:src/riscv.cpp **** 
 131:src/riscv.cpp **** void riscv::consoleInterruptHandler() { // Console
 768              		.loc 1 131 39 is_stmt 1
 769              		.cfi_startproc
 770              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 771              		.cfi_lsda 0x1b,.LLSDA59
 772 0374 130101FB 		addi	sp,sp,-80
 773              		.cfi_def_cfa_offset 80
 774 0378 23341104 		sd	ra,72(sp)
 775 037c 23308104 		sd	s0,64(sp)
 776 0380 233C9102 		sd	s1,56(sp)
 777 0384 23382103 		sd	s2,48(sp)
 778 0388 23343103 		sd	s3,40(sp)
 779              		.cfi_offset 1, -8
 780              		.cfi_offset 8, -16
 781              		.cfi_offset 9, -24
 782              		.cfi_offset 18, -32
 783              		.cfi_offset 19, -40
 784 038c 13040105 		addi	s0,sp,80
 785              		.cfi_def_cfa 8, 0
 132:src/riscv.cpp ****     volatile uint64 sepc = riscv::r_sepc();
 786              		.loc 1 132 5
 787              	.LBB108:
 788              	.LBB109:
  43:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 789              		.loc 2 43 9
  44:src/../h/riscv.hpp ****         return sepc;
 790              		.loc 2 44 9
  44:src/../h/riscv.hpp ****         return sepc;
 791              		.loc 2 44 67 is_stmt 0
 792              	#APP
 793              	# 44 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccPe5w3o.s 			page 24


 794              		csrr a5, sepc
 795              	# 0 "" 2
 796              	#NO_APP
 797 0394 233CF4FA 		sd	a5,-72(s0)
  45:src/../h/riscv.hpp ****     }
 798              		.loc 2 45 9 is_stmt 1
  45:src/../h/riscv.hpp ****     }
 799              		.loc 2 45 16 is_stmt 0
 800 0398 833784FB 		ld	a5,-72(s0)
 801              	.LBE109:
 802              	.LBE108:
 803              		.loc 1 132 42
 804 039c 2334F4FC 		sd	a5,-56(s0)
 133:src/riscv.cpp ****     volatile uint64 sstatus = riscv::r_sstatus();
 805              		.loc 1 133 5 is_stmt 1
 806              	.LBB110:
 807              	.LBB111:
  67:src/../h/riscv.hpp ****         __asm__ volatile("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 808              		.loc 2 67 9
  68:src/../h/riscv.hpp ****         return sstatus;
 809              		.loc 2 68 9
  68:src/../h/riscv.hpp ****         return sstatus;
 810              		.loc 2 68 79 is_stmt 0
 811              	#APP
 812              	# 68 "src/../h/riscv.hpp" 1
 813              		csrr a5, sstatus
 814              	# 0 "" 2
 815              	#NO_APP
 816 03a4 2338F4FA 		sd	a5,-80(s0)
  69:src/../h/riscv.hpp ****     }
 817              		.loc 2 69 9 is_stmt 1
  69:src/../h/riscv.hpp ****     }
 818              		.loc 2 69 16 is_stmt 0
 819 03a8 833704FB 		ld	a5,-80(s0)
 820              	.LBE111:
 821              	.LBE110:
 822              		.loc 1 133 48
 823 03ac 2330F4FC 		sd	a5,-64(s0)
 134:src/riscv.cpp ****     int deviceNum = plic_claim();
 824              		.loc 1 134 5 is_stmt 1
 825              	.LEHB0:
 826              		.loc 1 134 31 is_stmt 0
 827 03b0 97000000 		call	plic_claim@plt
 827      E7800000 
 828              	.LVL32:
 829 03b8 93040500 		mv	s1,a0
 830              	.LVL33:
 135:src/riscv.cpp ****     // Clears ninth bit stating that the hardware interrupt has been processed
 136:src/riscv.cpp ****     __asm__ volatile("csrc sip, %0" ::"r"(1UL<<9));
 831              		.loc 1 136 5 is_stmt 1
 832              		.loc 1 136 51 is_stmt 0
 833 03bc 93070020 		li	a5,512
 834              	#APP
 835              	# 136 "src/riscv.cpp" 1
 137              	    sem_signal(ConsoleKernel::get()->getSem);
 836              		csrc sip, a5
 837              	# 0 "" 2
GAS LISTING /tmp/ccPe5w3o.s 			page 25


 838              		.loc 1 137 5 is_stmt 1
 839              	#NO_APP
 840              	.LBB112:
 841              	.LBB113:
 842              		.file 6 "src/../h/ConsoleKernel.hpp"
   1:src/../h/ConsoleKernel.hpp **** //
   2:src/../h/ConsoleKernel.hpp **** // Created by os on 6/26/23.
   3:src/../h/ConsoleKernel.hpp **** //
   4:src/../h/ConsoleKernel.hpp **** 
   5:src/../h/ConsoleKernel.hpp **** #ifndef PROJECT_BASE_V1_1_CONSOLEKERNEL_HPP
   6:src/../h/ConsoleKernel.hpp **** #define PROJECT_BASE_V1_1_CONSOLEKERNEL_HPP
   7:src/../h/ConsoleKernel.hpp **** #include "../lib/hw.h"
   8:src/../h/ConsoleKernel.hpp **** #include "../h/BufferKernel.hpp"
   9:src/../h/ConsoleKernel.hpp **** #include "syscall_c.hpp"
  10:src/../h/ConsoleKernel.hpp **** 
  11:src/../h/ConsoleKernel.hpp **** 
  12:src/../h/ConsoleKernel.hpp **** class ConsoleKernel{
  13:src/../h/ConsoleKernel.hpp **** private:
  14:src/../h/ConsoleKernel.hpp ****     static ConsoleKernel* instance;
  15:src/../h/ConsoleKernel.hpp ****     ConsoleKernel(){
  16:src/../h/ConsoleKernel.hpp ****         sem_open(&getSem,0);
  17:src/../h/ConsoleKernel.hpp ****         sem_open(&putSem,0);
  18:src/../h/ConsoleKernel.hpp ****     }
  19:src/../h/ConsoleKernel.hpp **** public:
  20:src/../h/ConsoleKernel.hpp ****     BufferKernel input; // Console -> input buffer
  21:src/../h/ConsoleKernel.hpp ****     BufferKernel output; // Output buffer -> console
  22:src/../h/ConsoleKernel.hpp **** 
  23:src/../h/ConsoleKernel.hpp ****     // These semaphores are used to prevent busy wait
  24:src/../h/ConsoleKernel.hpp ****     sem_t getSem;
  25:src/../h/ConsoleKernel.hpp ****     sem_t putSem;
  26:src/../h/ConsoleKernel.hpp **** 
  27:src/../h/ConsoleKernel.hpp ****     // Functions of threads that will work with hardware
  28:src/../h/ConsoleKernel.hpp ****     static void getCharKernel(void*);
  29:src/../h/ConsoleKernel.hpp ****     static void putCharKernel(void*);
  30:src/../h/ConsoleKernel.hpp **** 
  31:src/../h/ConsoleKernel.hpp ****     // Functions of system calls
  32:src/../h/ConsoleKernel.hpp ****     static void putc(char);
  33:src/../h/ConsoleKernel.hpp ****     static char getc();
  34:src/../h/ConsoleKernel.hpp **** 
  35:src/../h/ConsoleKernel.hpp ****     // Singleton mechanism
  36:src/../h/ConsoleKernel.hpp ****     static ConsoleKernel* get(){
  37:src/../h/ConsoleKernel.hpp ****         if(!instance) instance = new ConsoleKernel();
 843              		.loc 6 37 9
 844              		.loc 6 37 12 is_stmt 0
 845 03c4 97070000 		la	a5,_ZN13ConsoleKernel8instanceE
 845      83B70700 
 846 03cc 83B70700 		ld	a5,0(a5)
 847              		.loc 6 37 9
 848 03d0 638A0706 		beqz	a5,.L39
 849              	.L30:
  38:src/../h/ConsoleKernel.hpp ****         return instance;
 850              		.loc 6 38 9 is_stmt 1
 851              		.loc 6 38 16 is_stmt 0
 852 03d4 17090000 		la	s2,_ZN13ConsoleKernel8instanceE
 852      03390900 
 853 03dc 83370900 		ld	a5,0(s2)
 854              	.LBE113:
GAS LISTING /tmp/ccPe5w3o.s 			page 26


 855              	.LBE112:
 856              		.loc 1 137 15
 857 03e0 03B50711 		ld	a0,272(a5)
 858 03e4 97000000 		call	_Z10sem_signalP4_sem@plt
 858      E7800000 
 859              	.LVL34:
 138:src/riscv.cpp ****     sem_signal(ConsoleKernel::get()->putSem);
 860              		.loc 1 138 5 is_stmt 1
 861              	.LBB124:
 862              	.LBB125:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 863              		.loc 6 37 9
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 864              		.loc 6 37 12 is_stmt 0
 865 03ec 83370900 		ld	a5,0(s2)
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 866              		.loc 6 37 9
 867 03f0 63840712 		beqz	a5,.L40
 868              	.L32:
 869              		.loc 6 38 9 is_stmt 1
 870              		.loc 6 38 16 is_stmt 0
 871 03f4 97070000 		la	a5,_ZN13ConsoleKernel8instanceE
 871      83B70700 
 872 03fc 83B70700 		ld	a5,0(a5)
 873              	.LBE125:
 874              	.LBE124:
 875              		.loc 1 138 15
 876 0400 03B58711 		ld	a0,280(a5)
 877 0404 97000000 		call	_Z10sem_signalP4_sem@plt
 877      E7800000 
 878              	.LVL35:
 139:src/riscv.cpp ****     plic_complete(deviceNum);
 879              		.loc 1 139 5 is_stmt 1
 880              		.loc 1 139 18 is_stmt 0
 881 040c 13850400 		mv	a0,s1
 882 0410 97000000 		call	plic_complete@plt
 882      E7800000 
 883              	.LVL36:
 140:src/riscv.cpp ****     //console_handler();
 141:src/riscv.cpp **** //    mc_sip(SIP_SSIP); // signal da je prekid obradjen
 142:src/riscv.cpp ****     w_sepc(sepc);
 884              		.loc 1 142 5 is_stmt 1
 885              		.loc 1 142 11 is_stmt 0
 886 0418 833784FC 		ld	a5,-56(s0)
 887              	.LVL37:
 888              	.LBB136:
 889              	.LBB137:
  49:src/../h/riscv.hpp ****     }
 890              		.loc 2 49 9 is_stmt 1
  49:src/../h/riscv.hpp ****     }
 891              		.loc 2 49 67 is_stmt 0
 892              	#APP
 893              	# 49 "src/../h/riscv.hpp" 1
 894              		csrw sepc, a5
 895              	# 0 "" 2
 896              	.LVL38:
 897              	#NO_APP
GAS LISTING /tmp/ccPe5w3o.s 			page 27


 898              	.LBE137:
 899              	.LBE136:
 143:src/riscv.cpp ****     w_sstatus(sstatus);
 900              		.loc 1 143 5 is_stmt 1
 901              		.loc 1 143 14 is_stmt 0
 902 0420 833704FC 		ld	a5,-64(s0)
 903              	.LVL39:
 904              	.LBB138:
 905              	.LBB139:
  73:src/../h/riscv.hpp ****     }
 906              		.loc 2 73 9 is_stmt 1
  73:src/../h/riscv.hpp ****     }
 907              		.loc 2 73 79 is_stmt 0
 908              	#APP
 909              	# 73 "src/../h/riscv.hpp" 1
 910              		csrw sstatus, a5
 911              	# 0 "" 2
 912              	.LVL40:
 913              	#NO_APP
 914              	.LBE139:
 915              	.LBE138:
 144:src/riscv.cpp **** }
 916              		.loc 1 144 1
 917 0428 83308104 		ld	ra,72(sp)
 918              		.cfi_remember_state
 919              		.cfi_restore 1
 920 042c 03340104 		ld	s0,64(sp)
 921              		.cfi_restore 8
 922              		.cfi_def_cfa 2, 80
 923 0430 83348103 		ld	s1,56(sp)
 924              		.cfi_restore 9
 925              	.LVL41:
 926 0434 03390103 		ld	s2,48(sp)
 927              		.cfi_restore 18
 928 0438 83398102 		ld	s3,40(sp)
 929              		.cfi_restore 19
 930 043c 13010105 		addi	sp,sp,80
 931              		.cfi_def_cfa_offset 0
 932 0440 67800000 		jr	ra
 933              	.LVL42:
 934              	.L39:
 935              		.cfi_restore_state
 936              	.LBB140:
 937              	.LBB123:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 938              		.loc 6 37 23 is_stmt 1
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 939              		.loc 6 37 52 is_stmt 0
 940 0444 13050012 		li	a0,288
 941 0448 97000000 		call	_Znwm@plt
 941      E7800000 
 942              	.LVL43:
 943              	.LEHE0:
 944 0450 13090500 		mv	s2,a0
 945              	.LVL44:
 946              	.LBB114:
 947              	.LBB115:
GAS LISTING /tmp/ccPe5w3o.s 			page 28


 948              	.LBB116:
 949              	.LBB117:
 950              	.LBB118:
 951              	.LBB119:
 952              		.file 7 "src/../h/../h/BufferKernel.hpp"
   1:src/../h/../h/BufferKernel.hpp **** //
   2:src/../h/../h/BufferKernel.hpp **** // Created by os on 6/26/23.
   3:src/../h/../h/BufferKernel.hpp **** //
   4:src/../h/../h/BufferKernel.hpp **** 
   5:src/../h/../h/BufferKernel.hpp **** #ifndef PROJECT_BASE_V1_1_MYBUFFER_HPP
   6:src/../h/../h/BufferKernel.hpp **** #define PROJECT_BASE_V1_1_MYBUFFER_HPP
   7:src/../h/../h/BufferKernel.hpp **** #include "syscall_c.hpp"
   8:src/../h/../h/BufferKernel.hpp **** 
   9:src/../h/../h/BufferKernel.hpp **** class BufferKernel{
  10:src/../h/../h/BufferKernel.hpp **** private:
  11:src/../h/../h/BufferKernel.hpp ****     int head;
  12:src/../h/../h/BufferKernel.hpp ****     int tail;
  13:src/../h/../h/BufferKernel.hpp ****     int size;
  14:src/../h/../h/BufferKernel.hpp ****     static const int maxSize = 100;
  15:src/../h/../h/BufferKernel.hpp ****     char buffer[maxSize];
  16:src/../h/../h/BufferKernel.hpp **** 
  17:src/../h/../h/BufferKernel.hpp ****     // mutexSem is used to prevent multiple
  18:src/../h/../h/BufferKernel.hpp ****     // threads from accessing the same getc and putc functions.
  19:src/../h/../h/BufferKernel.hpp ****     // This won't happen because the system is in the privileged mode
  20:src/../h/../h/BufferKernel.hpp ****     // in the only instance where buffer is used which is for Console threads.
  21:src/../h/../h/BufferKernel.hpp ****     // However, putting this semaphore in a buffer is essential if it gets used
  22:src/../h/../h/BufferKernel.hpp ****     // in user mode where asynchronous dispatches are possible.
  23:src/../h/../h/BufferKernel.hpp ****     sem_t mutexSem;
  24:src/../h/../h/BufferKernel.hpp **** 
  25:src/../h/../h/BufferKernel.hpp ****     // spacePutAv and charGetAv are used to prevent invalid locations
  26:src/../h/../h/BufferKernel.hpp ****     // when operating with buffer in putc and getc
  27:src/../h/../h/BufferKernel.hpp ****     sem_t spacePutAv;
  28:src/../h/../h/BufferKernel.hpp ****     sem_t charGetAv;
  29:src/../h/../h/BufferKernel.hpp **** public:
  30:src/../h/../h/BufferKernel.hpp ****     BufferKernel(): head(0), tail(0), size(0){
 953              		.loc 7 30 45
 954 0454 23200500 		sw	zero,0(a0)
 955 0458 23220500 		sw	zero,4(a0)
 956 045c 23240500 		sw	zero,8(a0)
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&mutexSem, 1);
 957              		.loc 7 31 9 is_stmt 1
 958              		.loc 7 31 17 is_stmt 0
 959 0460 93051000 		li	a1,1
 960 0464 13050507 		addi	a0,a0,112
 961              	.LVL45:
 962              	.LEHB1:
 963 0468 97000000 		call	_Z8sem_openPP4_semj@plt
 963      E7800000 
 964              	.LVL46:
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 965              		.loc 7 32 9 is_stmt 1
 966              		.loc 7 32 17 is_stmt 0
 967 0470 93054006 		li	a1,100
 968 0474 13058907 		addi	a0,s2,120
 969 0478 97000000 		call	_Z8sem_openPP4_semj@plt
 969      E7800000 
 970              	.LVL47:
GAS LISTING /tmp/ccPe5w3o.s 			page 29


  33:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 971              		.loc 7 33 9 is_stmt 1
 972              		.loc 7 33 17 is_stmt 0
 973 0480 93050000 		li	a1,0
 974 0484 13050908 		addi	a0,s2,128
 975 0488 97000000 		call	_Z8sem_openPP4_semj@plt
 975      E7800000 
 976              	.LVL48:
 977              	.LBE119:
 978              	.LBE118:
 979              	.LBE117:
 980              	.LBB120:
 981              	.LBB121:
 982              	.LBB122:
  30:src/../h/../h/BufferKernel.hpp ****         sem_open(&mutexSem, 1);
 983              		.loc 7 30 45
 984 0490 23240908 		sw	zero,136(s2)
 985 0494 23260908 		sw	zero,140(s2)
 986 0498 23280908 		sw	zero,144(s2)
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 987              		.loc 7 31 9 is_stmt 1
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 988              		.loc 7 31 17 is_stmt 0
 989 049c 93051000 		li	a1,1
 990 04a0 1305890F 		addi	a0,s2,248
 991 04a4 97000000 		call	_Z8sem_openPP4_semj@plt
 991      E7800000 
 992              	.LVL49:
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 993              		.loc 7 32 9 is_stmt 1
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 994              		.loc 7 32 17 is_stmt 0
 995 04ac 93054006 		li	a1,100
 996 04b0 13050910 		addi	a0,s2,256
 997 04b4 97000000 		call	_Z8sem_openPP4_semj@plt
 997      E7800000 
 998              	.LVL50:
 999              		.loc 7 33 9 is_stmt 1
 1000              		.loc 7 33 17 is_stmt 0
 1001 04bc 93050000 		li	a1,0
 1002 04c0 13058910 		addi	a0,s2,264
 1003 04c4 97000000 		call	_Z8sem_openPP4_semj@plt
 1003      E7800000 
 1004              	.LVL51:
 1005              	.LBE122:
 1006              	.LBE121:
 1007              	.LBE120:
  16:src/../h/ConsoleKernel.hpp ****         sem_open(&putSem,0);
 1008              		.loc 6 16 9 is_stmt 1
  16:src/../h/ConsoleKernel.hpp ****         sem_open(&putSem,0);
 1009              		.loc 6 16 17 is_stmt 0
 1010 04cc 93050000 		li	a1,0
 1011 04d0 13050911 		addi	a0,s2,272
 1012 04d4 97000000 		call	_Z8sem_openPP4_semj@plt
 1012      E7800000 
 1013              	.LVL52:
  17:src/../h/ConsoleKernel.hpp ****     }
GAS LISTING /tmp/ccPe5w3o.s 			page 30


 1014              		.loc 6 17 9 is_stmt 1
  17:src/../h/ConsoleKernel.hpp ****     }
 1015              		.loc 6 17 17 is_stmt 0
 1016 04dc 93050000 		li	a1,0
 1017 04e0 13058911 		addi	a0,s2,280
 1018 04e4 97000000 		call	_Z8sem_openPP4_semj@plt
 1018      E7800000 
 1019              	.LVL53:
 1020              	.LEHE1:
 1021              	.LBE116:
 1022              	.LBE115:
 1023              	.LBE114:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 1024              		.loc 6 37 32
 1025 04ec 97070000 		la	a5,_ZN13ConsoleKernel8instanceE
 1025      83B70700 
 1026 04f4 23B02701 		sd	s2,0(a5)
 1027 04f8 6FF0DFED 		j	.L30
 1028              	.LVL54:
 1029              	.L36:
 1030 04fc 93040500 		mv	s1,a0
 1031              	.LVL55:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 1032              		.loc 6 37 52
 1033 0500 13050900 		mv	a0,s2
 1034 0504 97000000 		call	_ZdlPv@plt
 1034      E7800000 
 1035              	.LVL56:
 1036 050c 13850400 		mv	a0,s1
 1037              	.LEHB2:
 1038 0510 97000000 		call	_Unwind_Resume@plt
 1038      E7800000 
 1039              	.LVL57:
 1040              	.L40:
 1041              	.LBE123:
 1042              	.LBE140:
 1043              	.LBB141:
 1044              	.LBB135:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 1045              		.loc 6 37 23 is_stmt 1
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 1046              		.loc 6 37 52 is_stmt 0
 1047 0518 13050012 		li	a0,288
 1048 051c 97000000 		call	_Znwm@plt
 1048      E7800000 
 1049              	.LVL58:
 1050              	.LEHE2:
 1051 0524 13090500 		mv	s2,a0
 1052              	.LVL59:
 1053              	.LBB126:
 1054              	.LBB127:
 1055              	.LBB128:
 1056              	.LBB129:
 1057              	.LBB130:
 1058              	.LBB131:
  30:src/../h/../h/BufferKernel.hpp ****         sem_open(&mutexSem, 1);
 1059              		.loc 7 30 45
GAS LISTING /tmp/ccPe5w3o.s 			page 31


 1060 0528 23200500 		sw	zero,0(a0)
 1061 052c 23220500 		sw	zero,4(a0)
 1062 0530 23240500 		sw	zero,8(a0)
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 1063              		.loc 7 31 9 is_stmt 1
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 1064              		.loc 7 31 17 is_stmt 0
 1065 0534 93051000 		li	a1,1
 1066 0538 13050507 		addi	a0,a0,112
 1067              	.LVL60:
 1068              	.LEHB3:
 1069 053c 97000000 		call	_Z8sem_openPP4_semj@plt
 1069      E7800000 
 1070              	.LVL61:
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 1071              		.loc 7 32 9 is_stmt 1
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 1072              		.loc 7 32 17 is_stmt 0
 1073 0544 93054006 		li	a1,100
 1074 0548 13058907 		addi	a0,s2,120
 1075 054c 97000000 		call	_Z8sem_openPP4_semj@plt
 1075      E7800000 
 1076              	.LVL62:
 1077              		.loc 7 33 9 is_stmt 1
 1078              		.loc 7 33 17 is_stmt 0
 1079 0554 93050000 		li	a1,0
 1080 0558 13050908 		addi	a0,s2,128
 1081 055c 97000000 		call	_Z8sem_openPP4_semj@plt
 1081      E7800000 
 1082              	.LVL63:
 1083              	.LBE131:
 1084              	.LBE130:
 1085              	.LBE129:
 1086              	.LBB132:
 1087              	.LBB133:
 1088              	.LBB134:
  30:src/../h/../h/BufferKernel.hpp ****         sem_open(&mutexSem, 1);
 1089              		.loc 7 30 45
 1090 0564 23240908 		sw	zero,136(s2)
 1091 0568 23260908 		sw	zero,140(s2)
 1092 056c 23280908 		sw	zero,144(s2)
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 1093              		.loc 7 31 9 is_stmt 1
  31:src/../h/../h/BufferKernel.hpp ****         sem_open(&spacePutAv, maxSize);
 1094              		.loc 7 31 17 is_stmt 0
 1095 0570 93051000 		li	a1,1
 1096 0574 1305890F 		addi	a0,s2,248
 1097 0578 97000000 		call	_Z8sem_openPP4_semj@plt
 1097      E7800000 
 1098              	.LVL64:
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 1099              		.loc 7 32 9 is_stmt 1
  32:src/../h/../h/BufferKernel.hpp ****         sem_open(&charGetAv, 0);
 1100              		.loc 7 32 17 is_stmt 0
 1101 0580 93054006 		li	a1,100
 1102 0584 13050910 		addi	a0,s2,256
 1103 0588 97000000 		call	_Z8sem_openPP4_semj@plt
GAS LISTING /tmp/ccPe5w3o.s 			page 32


 1103      E7800000 
 1104              	.LVL65:
 1105              		.loc 7 33 9 is_stmt 1
 1106              		.loc 7 33 17 is_stmt 0
 1107 0590 93050000 		li	a1,0
 1108 0594 13058910 		addi	a0,s2,264
 1109 0598 97000000 		call	_Z8sem_openPP4_semj@plt
 1109      E7800000 
 1110              	.LVL66:
 1111              	.LBE134:
 1112              	.LBE133:
 1113              	.LBE132:
  16:src/../h/ConsoleKernel.hpp ****         sem_open(&putSem,0);
 1114              		.loc 6 16 9 is_stmt 1
  16:src/../h/ConsoleKernel.hpp ****         sem_open(&putSem,0);
 1115              		.loc 6 16 17 is_stmt 0
 1116 05a0 93050000 		li	a1,0
 1117 05a4 13050911 		addi	a0,s2,272
 1118 05a8 97000000 		call	_Z8sem_openPP4_semj@plt
 1118      E7800000 
 1119              	.LVL67:
  17:src/../h/ConsoleKernel.hpp ****     }
 1120              		.loc 6 17 9 is_stmt 1
  17:src/../h/ConsoleKernel.hpp ****     }
 1121              		.loc 6 17 17 is_stmt 0
 1122 05b0 93050000 		li	a1,0
 1123 05b4 13058911 		addi	a0,s2,280
 1124 05b8 97000000 		call	_Z8sem_openPP4_semj@plt
 1124      E7800000 
 1125              	.LVL68:
 1126              	.LEHE3:
 1127              	.LBE128:
 1128              	.LBE127:
 1129              	.LBE126:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 1130              		.loc 6 37 32
 1131 05c0 97070000 		la	a5,_ZN13ConsoleKernel8instanceE
 1131      83B70700 
 1132 05c8 23B02701 		sd	s2,0(a5)
 1133 05cc 6FF09FE2 		j	.L32
 1134              	.LVL69:
 1135              	.L35:
 1136 05d0 93040500 		mv	s1,a0
 1137              	.LVL70:
  37:src/../h/ConsoleKernel.hpp ****         return instance;
 1138              		.loc 6 37 52
 1139 05d4 13050900 		mv	a0,s2
 1140 05d8 97000000 		call	_ZdlPv@plt
 1140      E7800000 
 1141              	.LVL71:
 1142 05e0 13850400 		mv	a0,s1
 1143              	.LEHB4:
 1144 05e4 97000000 		call	_Unwind_Resume@plt
 1144      E7800000 
 1145              	.LVL72:
 1146              	.LEHE4:
 1147              	.LBE135:
GAS LISTING /tmp/ccPe5w3o.s 			page 33


 1148              	.LBE141:
 1149              		.cfi_endproc
 1150              	.LFE59:
 1151              		.globl	__gxx_personality_v0
 1152              		.section	.gcc_except_table,"a",@progbits
 1153              	.LLSDA59:
 1154 0000 FF       		.byte	0xff
 1155 0001 FF       		.byte	0xff
 1156 0002 03       		.byte	0x3
 1157 0003 41       		.byte	0x41
 1158 0004 00000000 		.4byte	.LEHB0-.LFB59
 1159 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1160 000c 00000000 		.4byte	0
 1161 0010 00       		.byte	0
 1162 0011 00000000 		.4byte	.LEHB1-.LFB59
 1163 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1164 0019 00000000 		.4byte	.L36-.LFB59
 1165 001d 00       		.byte	0
 1166 001e 00000000 		.4byte	.LEHB2-.LFB59
 1167 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1168 0026 00000000 		.4byte	0
 1169 002a 00       		.byte	0
 1170 002b 00000000 		.4byte	.LEHB3-.LFB59
 1171 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1172 0033 00000000 		.4byte	.L35-.LFB59
 1173 0037 00       		.byte	0
 1174 0038 00000000 		.4byte	.LEHB4-.LFB59
 1175 003c 00000000 		.4byte	.LEHE4-.LEHB4
 1176 0040 00000000 		.4byte	0
 1177 0044 00       		.byte	0
 1178              		.text
 1180              		.align	2
 1181              		.globl	_ZN5riscv10popSppSpieEv
 1183              	_ZN5riscv10popSppSpieEv:
 1184              	.LFB60:
 145:src/riscv.cpp **** 
 146:src/riscv.cpp **** // Ensure that the user mode doesn't have access to the system registers
 147:src/riscv.cpp **** // This function must not be inline because we must ensure that ra register changes.
 148:src/riscv.cpp **** // That's why it's defined in cpp.
 149:src/riscv.cpp **** void riscv::popSppSpie() {
 1185              		.loc 1 149 26 is_stmt 1
 1186              		.cfi_startproc
 1187 05ec 130101FF 		addi	sp,sp,-16
 1188              		.cfi_def_cfa_offset 16
 1189 05f0 23348100 		sd	s0,8(sp)
 1190              		.cfi_offset 8, -8
 1191 05f4 13040101 		addi	s0,sp,16
 1192              		.cfi_def_cfa 8, 0
 150:src/riscv.cpp ****     ms_sstatus(SSTATUS_SPIE); // Setujemo bit za dozvoljavanje prekida na aktivno
 1193              		.loc 1 150 5
 1194              	.LVL73:
 1195              	.LBB142:
 1196              	.LBB143:
 123:src/../h/riscv.hpp ****     }
 1197              		.loc 2 123 9
 123:src/../h/riscv.hpp ****     }
 1198              		.loc 2 123 67 is_stmt 0
GAS LISTING /tmp/ccPe5w3o.s 			page 34


 1199 05f8 93070002 		li	a5,32
 1200              	#APP
 1201              	# 123 "src/../h/riscv.hpp" 1
 1202              		csrs sstatus, a5
 1203              	# 0 "" 2
 1204              	.LVL74:
 1205              	#NO_APP
 1206              	.LBE143:
 1207              	.LBE142:
 151:src/riscv.cpp **** 
 152:src/riscv.cpp ****     // When we call popSppSpie, ra register has the return pc value. We write it in sepc
 153:src/riscv.cpp ****     // so that that's the place where we land after we call sret at the very end of popSppSpie
 154:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 1208              		.loc 1 154 5 is_stmt 1
 1209              		.loc 1 154 39 is_stmt 0
 1210              	#APP
 1211              	# 154 "src/riscv.cpp" 1
 155              	
 156:src/riscv.cpp ****     if(TCB::running->getSystemAccessFlag())
 1212              		csrw sepc, ra
 1213              	# 0 "" 2
 1214              		.loc 1 156 5 is_stmt 1
 1215              		.loc 1 156 41 is_stmt 0
 1216              	#NO_APP
 1217 0604 97070000 		la	a5,_ZN3TCB7runningE
 1217      83B70700 
 1218 060c 83B70700 		ld	a5,0(a5)
 1219              	.LVL75:
 1220              	.LBB144:
 1221              	.LBB145:
  44:src/../h/TCB.hpp **** 
 1222              		.loc 5 44 33 is_stmt 1
  44:src/../h/TCB.hpp **** 
 1223              		.loc 5 44 46 is_stmt 0
 1224 0610 83C78705 		lbu	a5,88(a5)
 1225              	.LVL76:
 1226              	.LBE145:
 1227              	.LBE144:
 1228              		.loc 1 156 5
 1229 0614 638E0700 		beqz	a5,.L42
 157:src/riscv.cpp ****         __asm__ volatile ("csrs sstatus, %0"::"r"(0x100)); // Dajemo sistemske privilegije
 1230              		.loc 1 157 9 is_stmt 1
 1231              		.loc 1 157 58 is_stmt 0
 1232 0618 93070010 		li	a5,256
 1233              	#APP
 1234              	# 157 "src/riscv.cpp" 1
 158              	    else
 1235              		csrs sstatus, a5
 1236              	# 0 "" 2
 1237              	#NO_APP
 1238              	.L43:
 159:src/riscv.cpp ****         __asm__ volatile ("csrc sstatus, %0"::"r"(0x100)); // Dajemo user privilegije
 160:src/riscv.cpp **** 
 161:src/riscv.cpp ****     __asm__ volatile("sret");
 1239              		.loc 1 161 5 is_stmt 1
 1240              		.loc 1 161 29 is_stmt 0
 1241              	#APP
GAS LISTING /tmp/ccPe5w3o.s 			page 35


 1242              	# 161 "src/riscv.cpp" 1
 162              	}
 1243              		sret
 1244              	# 0 "" 2
 1245              		.loc 1 162 1
 1246              	#NO_APP
 1247 0624 03348100 		ld	s0,8(sp)
 1248              		.cfi_remember_state
 1249              		.cfi_restore 8
 1250              		.cfi_def_cfa 2, 16
 1251 0628 13010101 		addi	sp,sp,16
 1252              		.cfi_def_cfa_offset 0
 1253 062c 67800000 		jr	ra
 1254              	.L42:
 1255              		.cfi_restore_state
 159:src/riscv.cpp ****         __asm__ volatile ("csrc sstatus, %0"::"r"(0x100)); // Dajemo user privilegije
 1256              		.loc 1 159 9 is_stmt 1
 159:src/riscv.cpp ****         __asm__ volatile ("csrc sstatus, %0"::"r"(0x100)); // Dajemo user privilegije
 1257              		.loc 1 159 58 is_stmt 0
 1258 0630 93070010 		li	a5,256
 1259              	#APP
 1260              	# 159 "src/riscv.cpp" 1
 1261              		csrc sstatus, a5
 1262              	# 0 "" 2
 1263              	#NO_APP
 1264 0638 6FF09FFE 		j	.L43
 1265              		.cfi_endproc
 1266              	.LFE60:
 1268              	.Letext0:
 1269              		.file 8 "src/../h/../lib/hw.h"
 1270              		.file 9 "src/../h/syscall_c.hpp"
 1271              		.file 10 "src/../h/sleeping.hpp"
 1272              		.file 11 "src/../h/MemoryAllocator.hpp"
 5871              		.align	3
 5874              	DW.ref.__gxx_personality_v0:
 5875 0000 00000000 		.dword	__gxx_personality_v0
 5875      00000000 
 5876              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5877              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccPe5w3o.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccPe5w3o.s:9      .text:0000000000000000 _ZN5riscv20handleSupervisorTrapEv
     /tmp/ccPe5w3o.s:13     .text:0000000000000000 .L0 
     /tmp/ccPe5w3o.s:14     .text:0000000000000000 .L0 
     /tmp/ccPe5w3o.s:15     .text:0000000000000004 .L0 
     /tmp/ccPe5w3o.s:19     .text:0000000000000010 .L0 
     /tmp/ccPe5w3o.s:20     .text:0000000000000010 .L0 
     /tmp/ccPe5w3o.s:21     .text:0000000000000010 .L0 
     /tmp/ccPe5w3o.s:23     .text:0000000000000014 .L0 
     /tmp/ccPe5w3o.s:28     .text:0000000000000014 .L0 
     /tmp/ccPe5w3o.s:29     .text:0000000000000014 .L0 
     /tmp/ccPe5w3o.s:30     .text:0000000000000014 .L0 
  src/../h/riscv.hpp:44     .text:0000000000000014 .L0 
     /tmp/ccPe5w3o.s:38     .text:000000000000001c .L0 
     /tmp/ccPe5w3o.s:39     .text:000000000000001c .L0 
     /tmp/ccPe5w3o.s:43     .text:0000000000000020 .L0 
     /tmp/ccPe5w3o.s:47     .text:0000000000000024 .L0 
     /tmp/ccPe5w3o.s:48     .text:0000000000000024 .L0 
     /tmp/ccPe5w3o.s:49     .text:0000000000000024 .L0 
  src/../h/riscv.hpp:68     .text:0000000000000024 .L0 
     /tmp/ccPe5w3o.s:57     .text:000000000000002c .L0 
     /tmp/ccPe5w3o.s:58     .text:000000000000002c .L0 
     /tmp/ccPe5w3o.s:62     .text:0000000000000030 .L0 
     /tmp/ccPe5w3o.s:66     .text:0000000000000034 .L0 
     /tmp/ccPe5w3o.s:67     .text:0000000000000034 .L0 
     /tmp/ccPe5w3o.s:68     .text:0000000000000034 .L0 
  src/../h/riscv.hpp:33     .text:0000000000000034 .L0 
     /tmp/ccPe5w3o.s:76     .text:000000000000003c .L0 
     /tmp/ccPe5w3o.s:77     .text:000000000000003c .L0 
     /tmp/ccPe5w3o.s:81     .text:0000000000000040 .L0 
     /tmp/ccPe5w3o.s:84     .text:0000000000000044 .L0 
     /tmp/ccPe5w3o.s:85     .text:0000000000000044 .L0 
     /tmp/ccPe5w3o.s:87     .text:0000000000000048 .L0 
     /tmp/ccPe5w3o.s:90     .text:0000000000000050 .L0 
     /tmp/ccPe5w3o.s:92     .text:0000000000000054 .L0 
     /tmp/ccPe5w3o.s:97     .text:000000000000005c .L0 
     /tmp/ccPe5w3o.s:98     .text:000000000000005c .L0 
     /tmp/ccPe5w3o.s:102    .text:0000000000000068 .L0 
     /tmp/ccPe5w3o.s:103    .text:0000000000000068 .L0 
       src/riscv.cpp:21     .text:0000000000000068 .L0 
     /tmp/ccPe5w3o.s:111    .text:0000000000000070 .L0 
       src/riscv.cpp:23     .text:0000000000000070 .L0 
     /tmp/ccPe5w3o.s:119    .text:0000000000000078 .L0 
       src/riscv.cpp:25     .text:0000000000000078 .L0 
     /tmp/ccPe5w3o.s:127    .text:0000000000000080 .L0 
       src/riscv.cpp:27     .text:0000000000000080 .L0 
     /tmp/ccPe5w3o.s:135    .text:0000000000000088 .L0 
       src/riscv.cpp:29     .text:0000000000000088 .L0 
     /tmp/ccPe5w3o.s:143    .text:0000000000000090 .L0 
     /tmp/ccPe5w3o.s:144    .text:0000000000000090 .L0 
     /tmp/ccPe5w3o.s:145    .text:0000000000000090 .L0 
     /tmp/ccPe5w3o.s:229    .text:00000000000000b8 .L0 
     /tmp/ccPe5w3o.s:230    .text:00000000000000b8 .L0 
     /tmp/ccPe5w3o.s:236    .text:00000000000000c4 .L0 
     /tmp/ccPe5w3o.s:237    .text:00000000000000c4 .L0 
     /tmp/ccPe5w3o.s:242    .text:00000000000000c8 .L0 
GAS LISTING /tmp/ccPe5w3o.s 			page 37


  src/../h/riscv.hpp:49     .text:00000000000000c8 .L0 
     /tmp/ccPe5w3o.s:252    .text:00000000000000cc .L0 
     /tmp/ccPe5w3o.s:253    .text:00000000000000cc .L0 
     /tmp/ccPe5w3o.s:258    .text:00000000000000d0 .L0 
  src/../h/riscv.hpp:73     .text:00000000000000d0 .L0 
     /tmp/ccPe5w3o.s:268    .text:00000000000000d4 .L0 
     /tmp/ccPe5w3o.s:269    .text:00000000000000d8 .L0 
     /tmp/ccPe5w3o.s:270    .text:00000000000000d8 .L0 
     /tmp/ccPe5w3o.s:272    .text:00000000000000dc .L0 
     /tmp/ccPe5w3o.s:273    .text:00000000000000dc .L0 
     /tmp/ccPe5w3o.s:275    .text:00000000000000e0 .L0 
     /tmp/ccPe5w3o.s:277    .text:00000000000000e4 .L0 
     /tmp/ccPe5w3o.s:280    .text:00000000000000e8 .L0 
     /tmp/ccPe5w3o.s:284    .text:00000000000000e8 .L0 
     /tmp/ccPe5w3o.s:285    .text:00000000000000e8 .L0 
     /tmp/ccPe5w3o.s:286    .text:00000000000000e8 .L0 
     /tmp/ccPe5w3o.s:288    .text:00000000000000ec .L0 
     /tmp/ccPe5w3o.s:291    .text:00000000000000f4 .L0 
     /tmp/ccPe5w3o.s:293    .text:00000000000000f8 .L0 
     /tmp/ccPe5w3o.s:294    .text:00000000000000f8 .L0 
       src/riscv.cpp:37     .text:00000000000000fc .L0 
     /tmp/ccPe5w3o.s:302    .text:0000000000000100 .L0 
     /tmp/ccPe5w3o.s:305    .text:0000000000000104 .L0 
     /tmp/ccPe5w3o.s:306    .text:0000000000000104 .L0 
     /tmp/ccPe5w3o.s:307    .text:0000000000000104 .L0 
     /tmp/ccPe5w3o.s:309    .text:0000000000000108 .L0 
     /tmp/ccPe5w3o.s:312    .text:0000000000000110 .L0 
     /tmp/ccPe5w3o.s:314    .text:0000000000000114 .L0 
     /tmp/ccPe5w3o.s:315    .text:0000000000000114 .L0 
       src/riscv.cpp:42     .text:0000000000000118 .L0 
     /tmp/ccPe5w3o.s:323    .text:000000000000011c .L0 
     /tmp/ccPe5w3o.s:326    .text:0000000000000120 .L0 
     /tmp/ccPe5w3o.s:327    .text:0000000000000120 .L0 
     /tmp/ccPe5w3o.s:328    .text:0000000000000120 .L0 
     /tmp/ccPe5w3o.s:330    .text:0000000000000124 .L0 
     /tmp/ccPe5w3o.s:332    .text:0000000000000128 .L0 
     /tmp/ccPe5w3o.s:334    .text:000000000000012c .L0 
     /tmp/ccPe5w3o.s:337    .text:0000000000000134 .L0 
     /tmp/ccPe5w3o.s:339    .text:0000000000000138 .L0 
     /tmp/ccPe5w3o.s:341    .text:000000000000013c .L0 
     /tmp/ccPe5w3o.s:342    .text:000000000000013c .L0 
     /tmp/ccPe5w3o.s:344    .text:0000000000000140 .L0 
     /tmp/ccPe5w3o.s:346    .text:0000000000000144 .L0 
     /tmp/ccPe5w3o.s:347    .text:0000000000000144 .L0 
     /tmp/ccPe5w3o.s:351    .text:000000000000014c .L0 
     /tmp/ccPe5w3o.s:352    .text:000000000000014c .L0 
       src/riscv.cpp:54     .text:0000000000000150 .L0 
     /tmp/ccPe5w3o.s:360    .text:0000000000000154 .L0 
     /tmp/ccPe5w3o.s:363    .text:0000000000000158 .L0 
     /tmp/ccPe5w3o.s:364    .text:0000000000000158 .L0 
     /tmp/ccPe5w3o.s:368    .text:0000000000000160 .L0 
     /tmp/ccPe5w3o.s:369    .text:0000000000000160 .L0 
     /tmp/ccPe5w3o.s:370    .text:0000000000000160 .L0 
     /tmp/ccPe5w3o.s:373    .text:0000000000000168 .L0 
     /tmp/ccPe5w3o.s:374    .text:0000000000000168 .L0 
     /tmp/ccPe5w3o.s:376    .text:000000000000016c .L0 
     /tmp/ccPe5w3o.s:377    .text:000000000000016c .L0 
GAS LISTING /tmp/ccPe5w3o.s 			page 38


       src/riscv.cpp:59     .text:0000000000000170 .L0 
     /tmp/ccPe5w3o.s:385    .text:0000000000000174 .L0 
     /tmp/ccPe5w3o.s:388    .text:0000000000000178 .L0 
     /tmp/ccPe5w3o.s:389    .text:0000000000000178 .L0 
     /tmp/ccPe5w3o.s:390    .text:0000000000000178 .L0 
     /tmp/ccPe5w3o.s:393    .text:0000000000000184 .L0 
     /tmp/ccPe5w3o.s:394    .text:0000000000000184 .L0 
     /tmp/ccPe5w3o.s:397    .text:000000000000018c .L0 
     /tmp/ccPe5w3o.s:400    .text:0000000000000190 .L0 
     /tmp/ccPe5w3o.s:401    .text:0000000000000190 .L0 
     /tmp/ccPe5w3o.s:402    .text:0000000000000190 .L0 
     /tmp/ccPe5w3o.s:404    .text:0000000000000194 .L0 
     /tmp/ccPe5w3o.s:407    .text:000000000000019c .L0 
     /tmp/ccPe5w3o.s:410    .text:00000000000001a0 .L0 
     /tmp/ccPe5w3o.s:411    .text:00000000000001a0 .L0 
     /tmp/ccPe5w3o.s:412    .text:00000000000001a0 .L0 
     /tmp/ccPe5w3o.s:414    .text:00000000000001a4 .L0 
     /tmp/ccPe5w3o.s:416    .text:00000000000001a8 .L0 
     /tmp/ccPe5w3o.s:423    .text:00000000000001b4 .L0 
     /tmp/ccPe5w3o.s:430    .text:00000000000001bc .L0 
     /tmp/ccPe5w3o.s:438    .text:00000000000001c4 .L0 
     /tmp/ccPe5w3o.s:440    .text:00000000000001c8 .L0 
     /tmp/ccPe5w3o.s:442    .text:00000000000001cc .L0 
     /tmp/ccPe5w3o.s:444    .text:00000000000001d0 .L0 
     /tmp/ccPe5w3o.s:445    .text:00000000000001d0 .L0 
     /tmp/ccPe5w3o.s:447    .text:00000000000001d4 .L0 
     /tmp/ccPe5w3o.s:451    .text:00000000000001dc .L0 
     /tmp/ccPe5w3o.s:453    .text:00000000000001e0 .L0 
     /tmp/ccPe5w3o.s:454    .text:00000000000001e0 .L0 
       src/riscv.cpp:71     .text:00000000000001e4 .L0 
     /tmp/ccPe5w3o.s:462    .text:00000000000001e8 .L0 
     /tmp/ccPe5w3o.s:465    .text:00000000000001ec .L0 
     /tmp/ccPe5w3o.s:469    .text:00000000000001f4 .L0 
     /tmp/ccPe5w3o.s:470    .text:00000000000001f4 .L0 
     /tmp/ccPe5w3o.s:471    .text:00000000000001f4 .L0 
     /tmp/ccPe5w3o.s:473    .text:00000000000001f8 .L0 
     /tmp/ccPe5w3o.s:476    .text:0000000000000200 .L0 
     /tmp/ccPe5w3o.s:478    .text:0000000000000204 .L0 
     /tmp/ccPe5w3o.s:479    .text:0000000000000204 .L0 
       src/riscv.cpp:75     .text:0000000000000208 .L0 
     /tmp/ccPe5w3o.s:487    .text:000000000000020c .L0 
     /tmp/ccPe5w3o.s:490    .text:0000000000000210 .L0 
     /tmp/ccPe5w3o.s:491    .text:0000000000000210 .L0 
     /tmp/ccPe5w3o.s:492    .text:0000000000000210 .L0 
     /tmp/ccPe5w3o.s:494    .text:0000000000000214 .L0 
     /tmp/ccPe5w3o.s:497    .text:000000000000021c .L0 
     /tmp/ccPe5w3o.s:499    .text:0000000000000220 .L0 
     /tmp/ccPe5w3o.s:500    .text:0000000000000220 .L0 
       src/riscv.cpp:79     .text:0000000000000224 .L0 
     /tmp/ccPe5w3o.s:508    .text:0000000000000228 .L0 
     /tmp/ccPe5w3o.s:511    .text:000000000000022c .L0 
     /tmp/ccPe5w3o.s:512    .text:000000000000022c .L0 
     /tmp/ccPe5w3o.s:513    .text:000000000000022c .L0 
     /tmp/ccPe5w3o.s:515    .text:0000000000000230 .L0 
     /tmp/ccPe5w3o.s:518    .text:0000000000000238 .L0 
     /tmp/ccPe5w3o.s:520    .text:000000000000023c .L0 
     /tmp/ccPe5w3o.s:521    .text:000000000000023c .L0 
GAS LISTING /tmp/ccPe5w3o.s 			page 39


       src/riscv.cpp:83     .text:0000000000000240 .L0 
     /tmp/ccPe5w3o.s:529    .text:0000000000000244 .L0 
     /tmp/ccPe5w3o.s:532    .text:0000000000000248 .L0 
     /tmp/ccPe5w3o.s:533    .text:0000000000000248 .L0 
     /tmp/ccPe5w3o.s:534    .text:0000000000000248 .L0 
     /tmp/ccPe5w3o.s:536    .text:000000000000024c .L0 
     /tmp/ccPe5w3o.s:542    .text:0000000000000264 .L0 
     /tmp/ccPe5w3o.s:544    .text:0000000000000268 .L0 
     /tmp/ccPe5w3o.s:545    .text:0000000000000268 .L0 
     /tmp/ccPe5w3o.s:548    .text:0000000000000274 .L0 
     /tmp/ccPe5w3o.s:549    .text:0000000000000274 .L0 
     /tmp/ccPe5w3o.s:552    .text:000000000000027c .L0 
     /tmp/ccPe5w3o.s:553    .text:000000000000027c .L0 
       src/riscv.cpp:89     .text:0000000000000280 .L0 
     /tmp/ccPe5w3o.s:561    .text:0000000000000284 .L0 
     /tmp/ccPe5w3o.s:564    .text:0000000000000288 .L0 
     /tmp/ccPe5w3o.s:565    .text:0000000000000288 .L0 
     /tmp/ccPe5w3o.s:566    .text:0000000000000288 .L0 
     /tmp/ccPe5w3o.s:569    .text:0000000000000290 .L0 
     /tmp/ccPe5w3o.s:571    .text:0000000000000294 .L0 
     /tmp/ccPe5w3o.s:572    .text:0000000000000294 .L0 
       src/riscv.cpp:94     .text:0000000000000298 .L0 
     /tmp/ccPe5w3o.s:580    .text:000000000000029c .L0 
     /tmp/ccPe5w3o.s:583    .text:00000000000002a0 .L0 
     /tmp/ccPe5w3o.s:584    .text:00000000000002a0 .L0 
     /tmp/ccPe5w3o.s:585    .text:00000000000002a0 .L0 
     /tmp/ccPe5w3o.s:587    .text:00000000000002a4 .L0 
     /tmp/ccPe5w3o.s:591    .text:00000000000002b0 .L0 
     /tmp/ccPe5w3o.s:594    .text:00000000000002b4 .L0 
     /tmp/ccPe5w3o.s:595    .text:00000000000002b4 .L0 
     /tmp/ccPe5w3o.s:596    .text:00000000000002b4 .L0 
     /tmp/ccPe5w3o.s:600    .text:00000000000002c0 .L0 
     /tmp/ccPe5w3o.s:603    .text:00000000000002c4 .L0 
     /tmp/ccPe5w3o.s:609    .text:00000000000002c4 _ZN5riscv21timerInterruptHandlerEv
     /tmp/ccPe5w3o.s:612    .text:00000000000002c4 .L0 
     /tmp/ccPe5w3o.s:613    .text:00000000000002c4 .L0 
     /tmp/ccPe5w3o.s:614    .text:00000000000002c8 .L0 
     /tmp/ccPe5w3o.s:617    .text:00000000000002d0 .L0 
     /tmp/ccPe5w3o.s:618    .text:00000000000002d0 .L0 
     /tmp/ccPe5w3o.s:620    .text:00000000000002d4 .L0 
     /tmp/ccPe5w3o.s:624    .text:00000000000002d4 .L0 
     /tmp/ccPe5w3o.s:625    .text:00000000000002d4 .L0 
     /tmp/ccPe5w3o.s:626    .text:00000000000002d4 .L0 
  src/../h/riscv.hpp:44     .text:00000000000002d4 .L0 
     /tmp/ccPe5w3o.s:634    .text:00000000000002dc .L0 
     /tmp/ccPe5w3o.s:635    .text:00000000000002dc .L0 
     /tmp/ccPe5w3o.s:639    .text:00000000000002e0 .L0 
     /tmp/ccPe5w3o.s:643    .text:00000000000002e4 .L0 
     /tmp/ccPe5w3o.s:644    .text:00000000000002e4 .L0 
     /tmp/ccPe5w3o.s:645    .text:00000000000002e4 .L0 
  src/../h/riscv.hpp:68     .text:00000000000002e4 .L0 
     /tmp/ccPe5w3o.s:653    .text:00000000000002ec .L0 
     /tmp/ccPe5w3o.s:654    .text:00000000000002ec .L0 
     /tmp/ccPe5w3o.s:658    .text:00000000000002f0 .L0 
     /tmp/ccPe5w3o.s:660    .text:00000000000002f4 .L0 
     /tmp/ccPe5w3o.s:661    .text:00000000000002f4 .L0 
     /tmp/ccPe5w3o.s:666    .text:0000000000000308 .L0 
GAS LISTING /tmp/ccPe5w3o.s 			page 40


     /tmp/ccPe5w3o.s:667    .text:0000000000000308 .L0 
     /tmp/ccPe5w3o.s:670    .text:0000000000000310 .L0 
     /tmp/ccPe5w3o.s:671    .text:0000000000000310 .L0 
     /tmp/ccPe5w3o.s:674    .text:000000000000031c .L0 
     /tmp/ccPe5w3o.s:680    .text:0000000000000320 .L0 
     /tmp/ccPe5w3o.s:681    .text:0000000000000320 .L0 
     /tmp/ccPe5w3o.s:682    .text:0000000000000320 .L0 
     /tmp/ccPe5w3o.s:687    .text:0000000000000324 .L0 
     /tmp/ccPe5w3o.s:690    .text:0000000000000330 .L0 
     /tmp/ccPe5w3o.s:696    .text:0000000000000334 .L0 
     /tmp/ccPe5w3o.s:697    .text:0000000000000334 .L0 
     /tmp/ccPe5w3o.s:698    .text:0000000000000334 .L0 
     /tmp/ccPe5w3o.s:708    .text:000000000000033c .L0 
     /tmp/ccPe5w3o.s:709    .text:000000000000033c .L0 
     /tmp/ccPe5w3o.s:714    .text:0000000000000340 .L0 
  src/../h/riscv.hpp:49     .text:0000000000000340 .L0 
     /tmp/ccPe5w3o.s:724    .text:0000000000000344 .L0 
     /tmp/ccPe5w3o.s:725    .text:0000000000000344 .L0 
     /tmp/ccPe5w3o.s:730    .text:0000000000000348 .L0 
  src/../h/riscv.hpp:73     .text:0000000000000348 .L0 
     /tmp/ccPe5w3o.s:740    .text:000000000000034c .L0 
     /tmp/ccPe5w3o.s:741    .text:0000000000000350 .L0 
     /tmp/ccPe5w3o.s:742    .text:0000000000000350 .L0 
     /tmp/ccPe5w3o.s:744    .text:0000000000000354 .L0 
     /tmp/ccPe5w3o.s:745    .text:0000000000000354 .L0 
     /tmp/ccPe5w3o.s:747    .text:0000000000000358 .L0 
     /tmp/ccPe5w3o.s:750    .text:000000000000035c .L0 
     /tmp/ccPe5w3o.s:752    .text:000000000000035c .L0 
     /tmp/ccPe5w3o.s:753    .text:000000000000035c .L0 
     /tmp/ccPe5w3o.s:756    .text:0000000000000368 .L0 
     /tmp/ccPe5w3o.s:757    .text:0000000000000368 .L0 
     /tmp/ccPe5w3o.s:760    .text:0000000000000374 .L0 
     /tmp/ccPe5w3o.s:766    .text:0000000000000374 _ZN5riscv23consoleInterruptHandlerEv
     /tmp/ccPe5w3o.s:769    .text:0000000000000374 .L0 
     /tmp/ccPe5w3o.s:5874   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccPe5w3o.s:772    .text:0000000000000374 .L0 
     /tmp/ccPe5w3o.s:773    .text:0000000000000378 .L0 
     /tmp/ccPe5w3o.s:779    .text:000000000000038c .L0 
     /tmp/ccPe5w3o.s:780    .text:000000000000038c .L0 
     /tmp/ccPe5w3o.s:781    .text:000000000000038c .L0 
     /tmp/ccPe5w3o.s:782    .text:000000000000038c .L0 
     /tmp/ccPe5w3o.s:783    .text:000000000000038c .L0 
     /tmp/ccPe5w3o.s:785    .text:0000000000000390 .L0 
     /tmp/ccPe5w3o.s:789    .text:0000000000000390 .L0 
     /tmp/ccPe5w3o.s:790    .text:0000000000000390 .L0 
     /tmp/ccPe5w3o.s:791    .text:0000000000000390 .L0 
  src/../h/riscv.hpp:44     .text:0000000000000390 .L0 
     /tmp/ccPe5w3o.s:799    .text:0000000000000398 .L0 
     /tmp/ccPe5w3o.s:800    .text:0000000000000398 .L0 
     /tmp/ccPe5w3o.s:804    .text:000000000000039c .L0 
     /tmp/ccPe5w3o.s:808    .text:00000000000003a0 .L0 
     /tmp/ccPe5w3o.s:809    .text:00000000000003a0 .L0 
     /tmp/ccPe5w3o.s:810    .text:00000000000003a0 .L0 
  src/../h/riscv.hpp:68     .text:00000000000003a0 .L0 
     /tmp/ccPe5w3o.s:818    .text:00000000000003a8 .L0 
     /tmp/ccPe5w3o.s:819    .text:00000000000003a8 .L0 
     /tmp/ccPe5w3o.s:823    .text:00000000000003ac .L0 
GAS LISTING /tmp/ccPe5w3o.s 			page 41


     /tmp/ccPe5w3o.s:826    .text:00000000000003b0 .L0 
     /tmp/ccPe5w3o.s:827    .text:00000000000003b0 .L0 
     /tmp/ccPe5w3o.s:832    .text:00000000000003bc .L0 
     /tmp/ccPe5w3o.s:833    .text:00000000000003bc .L0 
     /tmp/ccPe5w3o.s:843    .text:00000000000003c4 .L0 
     /tmp/ccPe5w3o.s:844    .text:00000000000003c4 .L0 
     /tmp/ccPe5w3o.s:845    .text:00000000000003c4 .L0 
     /tmp/ccPe5w3o.s:848    .text:00000000000003d0 .L0 
     /tmp/ccPe5w3o.s:851    .text:00000000000003d4 .L0 
     /tmp/ccPe5w3o.s:852    .text:00000000000003d4 .L0 
     /tmp/ccPe5w3o.s:857    .text:00000000000003e0 .L0 
     /tmp/ccPe5w3o.s:863    .text:00000000000003ec .L0 
     /tmp/ccPe5w3o.s:864    .text:00000000000003ec .L0 
     /tmp/ccPe5w3o.s:865    .text:00000000000003ec .L0 
     /tmp/ccPe5w3o.s:867    .text:00000000000003f0 .L0 
     /tmp/ccPe5w3o.s:870    .text:00000000000003f4 .L0 
     /tmp/ccPe5w3o.s:871    .text:00000000000003f4 .L0 
     /tmp/ccPe5w3o.s:876    .text:0000000000000400 .L0 
     /tmp/ccPe5w3o.s:880    .text:000000000000040c .L0 
     /tmp/ccPe5w3o.s:881    .text:000000000000040c .L0 
     /tmp/ccPe5w3o.s:885    .text:0000000000000418 .L0 
     /tmp/ccPe5w3o.s:886    .text:0000000000000418 .L0 
     /tmp/ccPe5w3o.s:891    .text:000000000000041c .L0 
  src/../h/riscv.hpp:49     .text:000000000000041c .L0 
     /tmp/ccPe5w3o.s:901    .text:0000000000000420 .L0 
     /tmp/ccPe5w3o.s:902    .text:0000000000000420 .L0 
     /tmp/ccPe5w3o.s:907    .text:0000000000000424 .L0 
  src/../h/riscv.hpp:73     .text:0000000000000424 .L0 
     /tmp/ccPe5w3o.s:917    .text:0000000000000428 .L0 
     /tmp/ccPe5w3o.s:918    .text:000000000000042c .L0 
     /tmp/ccPe5w3o.s:919    .text:000000000000042c .L0 
     /tmp/ccPe5w3o.s:921    .text:0000000000000430 .L0 
     /tmp/ccPe5w3o.s:922    .text:0000000000000430 .L0 
     /tmp/ccPe5w3o.s:924    .text:0000000000000434 .L0 
     /tmp/ccPe5w3o.s:927    .text:0000000000000438 .L0 
     /tmp/ccPe5w3o.s:929    .text:000000000000043c .L0 
     /tmp/ccPe5w3o.s:931    .text:0000000000000440 .L0 
     /tmp/ccPe5w3o.s:935    .text:0000000000000444 .L0 
     /tmp/ccPe5w3o.s:939    .text:0000000000000444 .L0 
     /tmp/ccPe5w3o.s:940    .text:0000000000000444 .L0 
     /tmp/ccPe5w3o.s:954    .text:0000000000000454 .L0 
     /tmp/ccPe5w3o.s:958    .text:0000000000000460 .L0 
     /tmp/ccPe5w3o.s:959    .text:0000000000000460 .L0 
     /tmp/ccPe5w3o.s:966    .text:0000000000000470 .L0 
     /tmp/ccPe5w3o.s:967    .text:0000000000000470 .L0 
     /tmp/ccPe5w3o.s:972    .text:0000000000000480 .L0 
     /tmp/ccPe5w3o.s:973    .text:0000000000000480 .L0 
     /tmp/ccPe5w3o.s:984    .text:0000000000000490 .L0 
     /tmp/ccPe5w3o.s:988    .text:000000000000049c .L0 
     /tmp/ccPe5w3o.s:989    .text:000000000000049c .L0 
     /tmp/ccPe5w3o.s:994    .text:00000000000004ac .L0 
     /tmp/ccPe5w3o.s:995    .text:00000000000004ac .L0 
     /tmp/ccPe5w3o.s:1000   .text:00000000000004bc .L0 
     /tmp/ccPe5w3o.s:1001   .text:00000000000004bc .L0 
     /tmp/ccPe5w3o.s:1009   .text:00000000000004cc .L0 
     /tmp/ccPe5w3o.s:1010   .text:00000000000004cc .L0 
     /tmp/ccPe5w3o.s:1015   .text:00000000000004dc .L0 
GAS LISTING /tmp/ccPe5w3o.s 			page 42


     /tmp/ccPe5w3o.s:1016   .text:00000000000004dc .L0 
     /tmp/ccPe5w3o.s:1025   .text:00000000000004ec .L0 
     /tmp/ccPe5w3o.s:1033   .text:0000000000000500 .L0 
     /tmp/ccPe5w3o.s:1046   .text:0000000000000518 .L0 
     /tmp/ccPe5w3o.s:1047   .text:0000000000000518 .L0 
     /tmp/ccPe5w3o.s:1060   .text:0000000000000528 .L0 
     /tmp/ccPe5w3o.s:1064   .text:0000000000000534 .L0 
     /tmp/ccPe5w3o.s:1065   .text:0000000000000534 .L0 
     /tmp/ccPe5w3o.s:1072   .text:0000000000000544 .L0 
     /tmp/ccPe5w3o.s:1073   .text:0000000000000544 .L0 
     /tmp/ccPe5w3o.s:1078   .text:0000000000000554 .L0 
     /tmp/ccPe5w3o.s:1079   .text:0000000000000554 .L0 
     /tmp/ccPe5w3o.s:1090   .text:0000000000000564 .L0 
     /tmp/ccPe5w3o.s:1094   .text:0000000000000570 .L0 
     /tmp/ccPe5w3o.s:1095   .text:0000000000000570 .L0 
     /tmp/ccPe5w3o.s:1100   .text:0000000000000580 .L0 
     /tmp/ccPe5w3o.s:1101   .text:0000000000000580 .L0 
     /tmp/ccPe5w3o.s:1106   .text:0000000000000590 .L0 
     /tmp/ccPe5w3o.s:1107   .text:0000000000000590 .L0 
     /tmp/ccPe5w3o.s:1115   .text:00000000000005a0 .L0 
     /tmp/ccPe5w3o.s:1116   .text:00000000000005a0 .L0 
     /tmp/ccPe5w3o.s:1121   .text:00000000000005b0 .L0 
     /tmp/ccPe5w3o.s:1122   .text:00000000000005b0 .L0 
     /tmp/ccPe5w3o.s:1131   .text:00000000000005c0 .L0 
     /tmp/ccPe5w3o.s:1139   .text:00000000000005d4 .L0 
     /tmp/ccPe5w3o.s:1149   .text:00000000000005ec .L0 
     /tmp/ccPe5w3o.s:1183   .text:00000000000005ec _ZN5riscv10popSppSpieEv
     /tmp/ccPe5w3o.s:1186   .text:00000000000005ec .L0 
     /tmp/ccPe5w3o.s:1187   .text:00000000000005ec .L0 
     /tmp/ccPe5w3o.s:1188   .text:00000000000005f0 .L0 
     /tmp/ccPe5w3o.s:1190   .text:00000000000005f4 .L0 
     /tmp/ccPe5w3o.s:1192   .text:00000000000005f8 .L0 
     /tmp/ccPe5w3o.s:1197   .text:00000000000005f8 .L0 
     /tmp/ccPe5w3o.s:1198   .text:00000000000005f8 .L0 
     /tmp/ccPe5w3o.s:1199   .text:00000000000005f8 .L0 
     /tmp/ccPe5w3o.s:1209   .text:0000000000000600 .L0 
       src/riscv.cpp:154    .text:0000000000000600 .L0 
     /tmp/ccPe5w3o.s:1215   .text:0000000000000604 .L0 
     /tmp/ccPe5w3o.s:1217   .text:0000000000000604 .L0 
     /tmp/ccPe5w3o.s:1223   .text:0000000000000610 .L0 
     /tmp/ccPe5w3o.s:1224   .text:0000000000000610 .L0 
     /tmp/ccPe5w3o.s:1229   .text:0000000000000614 .L0 
     /tmp/ccPe5w3o.s:1231   .text:0000000000000618 .L0 
     /tmp/ccPe5w3o.s:1232   .text:0000000000000618 .L0 
     /tmp/ccPe5w3o.s:1240   .text:0000000000000620 .L0 
       src/riscv.cpp:161    .text:0000000000000620 .L0 
     /tmp/ccPe5w3o.s:1247   .text:0000000000000624 .L0 
     /tmp/ccPe5w3o.s:1248   .text:0000000000000628 .L0 
     /tmp/ccPe5w3o.s:1249   .text:0000000000000628 .L0 
     /tmp/ccPe5w3o.s:1250   .text:0000000000000628 .L0 
     /tmp/ccPe5w3o.s:1252   .text:000000000000062c .L0 
     /tmp/ccPe5w3o.s:1255   .text:0000000000000630 .L0 
     /tmp/ccPe5w3o.s:1257   .text:0000000000000630 .L0 
     /tmp/ccPe5w3o.s:1258   .text:0000000000000630 .L0 
     /tmp/ccPe5w3o.s:1265   .text:000000000000063c .L0 
     /tmp/ccPe5w3o.s:1273   .text:000000000000063c .L0 
     /tmp/ccPe5w3o.s:157    .rodata:0000000000000000 .L6
GAS LISTING /tmp/ccPe5w3o.s 			page 43


     /tmp/ccPe5w3o.s:149    .text:00000000000000a0 .L0 
     /tmp/ccPe5w3o.s:390    .text:0000000000000178 .L0 
     /tmp/ccPe5w3o.s:537    .text:0000000000000250 .L0 
     /tmp/ccPe5w3o.s:545    .text:0000000000000268 .L0 
     /tmp/ccPe5w3o.s:661    .text:00000000000002f4 .L0 
     /tmp/ccPe5w3o.s:671    .text:0000000000000310 .L0 
     /tmp/ccPe5w3o.s:687    .text:0000000000000324 .L0 
     /tmp/ccPe5w3o.s:753    .text:000000000000035c .L0 
     /tmp/ccPe5w3o.s:845    .text:00000000000003c4 .L0 
     /tmp/ccPe5w3o.s:852    .text:00000000000003d4 .L0 
     /tmp/ccPe5w3o.s:871    .text:00000000000003f4 .L0 
     /tmp/ccPe5w3o.s:1025   .text:00000000000004ec .L0 
     /tmp/ccPe5w3o.s:1131   .text:00000000000005c0 .L0 
     /tmp/ccPe5w3o.s:1217   .text:0000000000000604 .L0 
     /tmp/ccPe5w3o.s:94     .text:000000000000005c .L2
     /tmp/ccPe5w3o.s:226    .text:00000000000000b8 .L24
     /tmp/ccPe5w3o.s:592    .text:00000000000002b4 .L4
     /tmp/ccPe5w3o.s:233    .text:00000000000000c4 .L3
     /tmp/ccPe5w3o.s:361    .text:0000000000000158 .L19
     /tmp/ccPe5w3o.s:349    .text:000000000000014c .L20
     /tmp/ccPe5w3o.s:463    .text:00000000000001ec .L22
     /tmp/ccPe5w3o.s:449    .text:00000000000001dc .L21
     /tmp/ccPe5w3o.s:691    .text:0000000000000334 .L26
     /tmp/ccPe5w3o.s:749    .text:000000000000035c .L28
     /tmp/ccPe5w3o.s:934    .text:0000000000000444 .L39
     /tmp/ccPe5w3o.s:1040   .text:0000000000000518 .L40
     /tmp/ccPe5w3o.s:849    .text:00000000000003d4 .L30
     /tmp/ccPe5w3o.s:868    .text:00000000000003f4 .L32
     /tmp/ccPe5w3o.s:1254   .text:0000000000000630 .L42
     /tmp/ccPe5w3o.s:1238   .text:0000000000000620 .L43
     /tmp/ccPe5w3o.s:279    .text:00000000000000e8 .L18
     /tmp/ccPe5w3o.s:303    .text:0000000000000104 .L17
     /tmp/ccPe5w3o.s:324    .text:0000000000000120 .L16
     /tmp/ccPe5w3o.s:366    .text:0000000000000160 .L15
     /tmp/ccPe5w3o.s:386    .text:0000000000000178 .L14
     /tmp/ccPe5w3o.s:398    .text:0000000000000190 .L13
     /tmp/ccPe5w3o.s:408    .text:00000000000001a0 .L12
     /tmp/ccPe5w3o.s:467    .text:00000000000001f4 .L11
     /tmp/ccPe5w3o.s:488    .text:0000000000000210 .L10
     /tmp/ccPe5w3o.s:509    .text:000000000000022c .L9
     /tmp/ccPe5w3o.s:530    .text:0000000000000248 .L8
     /tmp/ccPe5w3o.s:562    .text:0000000000000288 .L7
     /tmp/ccPe5w3o.s:581    .text:00000000000002a0 .L5
     /tmp/ccPe5w3o.s:825    .text:00000000000003b0 .LEHB0
     /tmp/ccPe5w3o.s:767    .text:0000000000000374 .LFB59
     /tmp/ccPe5w3o.s:943    .text:0000000000000450 .LEHE0
     /tmp/ccPe5w3o.s:962    .text:0000000000000468 .LEHB1
     /tmp/ccPe5w3o.s:1020   .text:00000000000004ec .LEHE1
     /tmp/ccPe5w3o.s:1029   .text:00000000000004fc .L36
     /tmp/ccPe5w3o.s:1037   .text:0000000000000510 .LEHB2
     /tmp/ccPe5w3o.s:1050   .text:0000000000000524 .LEHE2
     /tmp/ccPe5w3o.s:1068   .text:000000000000053c .LEHB3
     /tmp/ccPe5w3o.s:1126   .text:00000000000005c0 .LEHE3
     /tmp/ccPe5w3o.s:1135   .text:00000000000005d0 .L35
     /tmp/ccPe5w3o.s:1143   .text:00000000000005e4 .LEHB4
     /tmp/ccPe5w3o.s:1146   .text:00000000000005ec .LEHE4
     /tmp/ccPe5w3o.s:3886   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
GAS LISTING /tmp/ccPe5w3o.s 			page 44


     /tmp/ccPe5w3o.s:5766   .debug_str:0000000000000a7b .LASF230
     /tmp/ccPe5w3o.s:5840   .debug_str:0000000000000d80 .LASF231
     /tmp/ccPe5w3o.s:5588   .debug_str:00000000000005c1 .LASF232
     /tmp/ccPe5w3o.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccPe5w3o.s:1268   .text:000000000000063c .Letext0
     /tmp/ccPe5w3o.s:5386   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccPe5w3o.s:5554   .debug_str:00000000000004de .LASF0
     /tmp/ccPe5w3o.s:5580   .debug_str:0000000000000582 .LASF1
     /tmp/ccPe5w3o.s:5690   .debug_str:000000000000089d .LASF2
     /tmp/ccPe5w3o.s:5510   .debug_str:00000000000003a3 .LASF3
     /tmp/ccPe5w3o.s:5702   .debug_str:00000000000008f8 .LASF4
     /tmp/ccPe5w3o.s:5562   .debug_str:00000000000004fb .LASF5
     /tmp/ccPe5w3o.s:5404   .debug_str:0000000000000081 .LASF6
     /tmp/ccPe5w3o.s:5652   .debug_str:000000000000077e .LASF7
     /tmp/ccPe5w3o.s:5576   .debug_str:000000000000056a .LASF8
     /tmp/ccPe5w3o.s:5530   .debug_str:0000000000000434 .LASF9
     /tmp/ccPe5w3o.s:5536   .debug_str:000000000000046f .LASF10
     /tmp/ccPe5w3o.s:5452   .debug_str:000000000000020a .LASF11
     /tmp/ccPe5w3o.s:5522   .debug_str:0000000000000402 .LASF12
     /tmp/ccPe5w3o.s:5468   .debug_str:0000000000000266 .LASF13
     /tmp/ccPe5w3o.s:5450   .debug_str:00000000000001fa .LASF14
     /tmp/ccPe5w3o.s:5736   .debug_str:00000000000009be .LASF15
     /tmp/ccPe5w3o.s:5500   .debug_str:0000000000000355 .LASF16
     /tmp/ccPe5w3o.s:5722   .debug_str:000000000000096a .LASF17
     /tmp/ccPe5w3o.s:5758   .debug_str:0000000000000a56 .LASF138
     /tmp/ccPe5w3o.s:5440   .debug_str:00000000000001a9 .LASF18
     /tmp/ccPe5w3o.s:5714   .debug_str:0000000000000950 .LASF19
     /tmp/ccPe5w3o.s:5602   .debug_str:000000000000063f .LASF20
     /tmp/ccPe5w3o.s:5458   .debug_str:0000000000000228 .LASF21
     /tmp/ccPe5w3o.s:5742   .debug_str:00000000000009da .LASF233
     /tmp/ccPe5w3o.s:5454   .debug_str:0000000000000219 .LASF76
     /tmp/ccPe5w3o.s:5734   .debug_str:00000000000009b1 .LASF24
     /tmp/ccPe5w3o.s:5830   .debug_str:0000000000000d27 .LASF26
     /tmp/ccPe5w3o.s:5644   .debug_str:0000000000000756 .LASF22
     /tmp/ccPe5w3o.s:5784   .debug_str:0000000000000bb5 .LASF23
     /tmp/ccPe5w3o.s:5744   .debug_str:00000000000009e2 .LASF28
     /tmp/ccPe5w3o.s:5628   .debug_str:00000000000006ee .LASF30
     /tmp/ccPe5w3o.s:5434   .debug_str:000000000000016f .LASF25
     /tmp/ccPe5w3o.s:5640   .debug_str:0000000000000738 .LASF27
     /tmp/ccPe5w3o.s:5694   .debug_str:00000000000008be .LASF29
     /tmp/ccPe5w3o.s:5446   .debug_str:00000000000001cd .LASF31
     /tmp/ccPe5w3o.s:5748   .debug_str:00000000000009f3 .LASF32
     /tmp/ccPe5w3o.s:5518   .debug_str:00000000000003d8 .LASF33
     /tmp/ccPe5w3o.s:5622   .debug_str:00000000000006cb .LASF34
     /tmp/ccPe5w3o.s:5484   .debug_str:00000000000002e9 .LASF35
     /tmp/ccPe5w3o.s:5780   .debug_str:0000000000000ba1 .LASF36
     /tmp/ccPe5w3o.s:5636   .debug_str:0000000000000719 .LASF37
     /tmp/ccPe5w3o.s:5828   .debug_str:0000000000000d1d .LASF38
     /tmp/ccPe5w3o.s:5856   .debug_str:0000000000000df8 .LASF39
     /tmp/ccPe5w3o.s:5494   .debug_str:000000000000031a .LASF40
     /tmp/ccPe5w3o.s:5448   .debug_str:00000000000001e2 .LASF41
     /tmp/ccPe5w3o.s:5592   .debug_str:00000000000005ff .LASF42
     /tmp/ccPe5w3o.s:5660   .debug_str:00000000000007bf .LASF43
     /tmp/ccPe5w3o.s:5520   .debug_str:00000000000003ee .LASF44
     /tmp/ccPe5w3o.s:5566   .debug_str:0000000000000520 .LASF45
     /tmp/ccPe5w3o.s:5600   .debug_str:000000000000062b .LASF46
     /tmp/ccPe5w3o.s:5860   .debug_str:0000000000000e24 .LASF47
GAS LISTING /tmp/ccPe5w3o.s 			page 45


     /tmp/ccPe5w3o.s:5584   .debug_str:000000000000059b .LASF48
     /tmp/ccPe5w3o.s:5798   .debug_str:0000000000000c21 .LASF49
     /tmp/ccPe5w3o.s:5612   .debug_str:000000000000067a .LASF50
     /tmp/ccPe5w3o.s:5800   .debug_str:0000000000000c3a .LASF51
     /tmp/ccPe5w3o.s:5466   .debug_str:000000000000025a .LASF52
     /tmp/ccPe5w3o.s:5498   .debug_str:000000000000033e .LASF53
     /tmp/ccPe5w3o.s:5582   .debug_str:0000000000000595 .LASF54
     /tmp/ccPe5w3o.s:5772   .debug_str:0000000000000b4e .LASF56
     /tmp/ccPe5w3o.s:5560   .debug_str:00000000000004f6 .LASF69
     /tmp/ccPe5w3o.s:5524   .debug_str:0000000000000411 .LASF119
     /tmp/ccPe5w3o.s:5720   .debug_str:0000000000000965 .LASF55
     /tmp/ccPe5w3o.s:5574   .debug_str:000000000000055b .LASF57
     /tmp/ccPe5w3o.s:5762   .debug_str:0000000000000a66 .LASF107
     /tmp/ccPe5w3o.s:5704   .debug_str:00000000000008ff .LASF58
     /tmp/ccPe5w3o.s:5402   .debug_str:0000000000000075 .LASF59
     /tmp/ccPe5w3o.s:5394   .debug_str:0000000000000030 .LASF60
     /tmp/ccPe5w3o.s:5568   .debug_str:000000000000053f .LASF61
     /tmp/ccPe5w3o.s:5718   .debug_str:000000000000095f .LASF62
     /tmp/ccPe5w3o.s:5838   .debug_str:0000000000000d78 .LASF63
     /tmp/ccPe5w3o.s:5490   .debug_str:000000000000030e .LASF64
     /tmp/ccPe5w3o.s:5782   .debug_str:0000000000000bad .LASF65
     /tmp/ccPe5w3o.s:5842   .debug_str:0000000000000d8e .LASF66
     /tmp/ccPe5w3o.s:5662   .debug_str:00000000000007d7 .LASF67
     /tmp/ccPe5w3o.s:5670   .debug_str:000000000000081b .LASF68
     /tmp/ccPe5w3o.s:5696   .debug_str:00000000000008c8 .LASF114
     /tmp/ccPe5w3o.s:5478   .debug_str:00000000000002c5 .LASF192
     /tmp/ccPe5w3o.s:5400   .debug_str:000000000000004d .LASF194
     /tmp/ccPe5w3o.s:5442   .debug_str:00000000000001b2 .LASF70
     /tmp/ccPe5w3o.s:5586   .debug_str:00000000000005a8 .LASF72
     /tmp/ccPe5w3o.s:5486   .debug_str:0000000000000300 .LASF71
     /tmp/ccPe5w3o.s:5460   .debug_str:0000000000000231 .LASF73
     /tmp/ccPe5w3o.s:5666   .debug_str:0000000000000809 .LASF74
     /tmp/ccPe5w3o.s:5700   .debug_str:00000000000008ed .LASF75
     /tmp/ccPe5w3o.s:5710   .debug_str:0000000000000923 .LASF77
     /tmp/ccPe5w3o.s:5844   .debug_str:0000000000000d99 .LASF78
     /tmp/ccPe5w3o.s:5730   .debug_str:000000000000099e .LASF79
     /tmp/ccPe5w3o.s:5444   .debug_str:00000000000001c0 .LASF80
     /tmp/ccPe5w3o.s:5416   .debug_str:00000000000000d9 .LASF81
     /tmp/ccPe5w3o.s:5428   .debug_str:0000000000000153 .LASF82
     /tmp/ccPe5w3o.s:5488   .debug_str:0000000000000309 .LASF83
     /tmp/ccPe5w3o.s:5624   .debug_str:00000000000006d6 .LASF84
     /tmp/ccPe5w3o.s:5738   .debug_str:00000000000009ca .LASF85
     /tmp/ccPe5w3o.s:5724   .debug_str:0000000000000980 .LASF86
     /tmp/ccPe5w3o.s:5746   .debug_str:00000000000009ed .LASF87
     /tmp/ccPe5w3o.s:5608   .debug_str:0000000000000668 .LASF88
     /tmp/ccPe5w3o.s:5552   .debug_str:00000000000004d8 .LASF89
     /tmp/ccPe5w3o.s:5516   .debug_str:00000000000003c7 .LASF90
     /tmp/ccPe5w3o.s:5398   .debug_str:0000000000000045 .LASF91
     /tmp/ccPe5w3o.s:5390   .debug_str:0000000000000018 .LASF92
     /tmp/ccPe5w3o.s:5820   .debug_str:0000000000000ced .LASF93
     /tmp/ccPe5w3o.s:5638   .debug_str:0000000000000730 .LASF94
     /tmp/ccPe5w3o.s:5620   .debug_str:00000000000006c6 .LASF95
     /tmp/ccPe5w3o.s:5728   .debug_str:0000000000000999 .LASF96
     /tmp/ccPe5w3o.s:5632   .debug_str:000000000000070d .LASF97
     /tmp/ccPe5w3o.s:5804   .debug_str:0000000000000c55 .LASF98
     /tmp/ccPe5w3o.s:5412   .debug_str:00000000000000bd .LASF99
     /tmp/ccPe5w3o.s:5480   .debug_str:00000000000002d3 .LASF234
GAS LISTING /tmp/ccPe5w3o.s 			page 46


     /tmp/ccPe5w3o.s:5818   .debug_str:0000000000000cdd .LASF235
     /tmp/ccPe5w3o.s:5594   .debug_str:000000000000060c .LASF100
     /tmp/ccPe5w3o.s:5418   .debug_str:00000000000000df .LASF101
     /tmp/ccPe5w3o.s:5648   .debug_str:000000000000076b .LASF102
     /tmp/ccPe5w3o.s:5426   .debug_str:000000000000013b .LASF103
     /tmp/ccPe5w3o.s:5678   .debug_str:0000000000000845 .LASF104
     /tmp/ccPe5w3o.s:5464   .debug_str:000000000000024d .LASF105
     /tmp/ccPe5w3o.s:5578   .debug_str:000000000000057d .LASF106
     /tmp/ccPe5w3o.s:5604   .debug_str:0000000000000647 .LASF108
     /tmp/ccPe5w3o.s:5716   .debug_str:0000000000000958 .LASF109
     /tmp/ccPe5w3o.s:5474   .debug_str:00000000000002a0 .LASF110
     /tmp/ccPe5w3o.s:5808   .debug_str:0000000000000c70 .LASF111
     /tmp/ccPe5w3o.s:5864   .debug_str:0000000000000e52 .LASF112
     /tmp/ccPe5w3o.s:5790   .debug_str:0000000000000bea .LASF113
     /tmp/ccPe5w3o.s:5514   .debug_str:00000000000003af .LASF236
     /tmp/ccPe5w3o.s:5438   .debug_str:0000000000000191 .LASF115
     /tmp/ccPe5w3o.s:5752   .debug_str:0000000000000a18 .LASF116
     /tmp/ccPe5w3o.s:5806   .debug_str:0000000000000c62 .LASF117
     /tmp/ccPe5w3o.s:5462   .debug_str:0000000000000244 .LASF118
     /tmp/ccPe5w3o.s:5544   .debug_str:00000000000004a0 .LASF120
     /tmp/ccPe5w3o.s:5506   .debug_str:000000000000038e .LASF121
     /tmp/ccPe5w3o.s:5676   .debug_str:000000000000083e .LASF122
     /tmp/ccPe5w3o.s:5642   .debug_str:000000000000074f .LASF123
     /tmp/ccPe5w3o.s:5668   .debug_str:0000000000000814 .LASF124
     /tmp/ccPe5w3o.s:5698   .debug_str:00000000000008df .LASF125
     /tmp/ccPe5w3o.s:5810   .debug_str:0000000000000c7b .LASF126
     /tmp/ccPe5w3o.s:5732   .debug_str:00000000000009a3 .LASF127
     /tmp/ccPe5w3o.s:5756   .debug_str:0000000000000a31 .LASF128
     /tmp/ccPe5w3o.s:5610   .debug_str:0000000000000675 .LASF129
     /tmp/ccPe5w3o.s:5852   .debug_str:0000000000000dcf .LASF130
     /tmp/ccPe5w3o.s:5556   .debug_str:00000000000004eb .LASF131
     /tmp/ccPe5w3o.s:5750   .debug_str:00000000000009fe .LASF158
     /tmp/ccPe5w3o.s:5606   .debug_str:000000000000064f .LASF237
     /tmp/ccPe5w3o.s:5862   .debug_str:0000000000000e43 .LASF132
     /tmp/ccPe5w3o.s:5496   .debug_str:0000000000000327 .LASF133
     /tmp/ccPe5w3o.s:5740   .debug_str:00000000000009d1 .LASF134
     /tmp/ccPe5w3o.s:5858   .debug_str:0000000000000e0c .LASF238
     /tmp/ccPe5w3o.s:5538   .debug_str:000000000000047d .LASF135
     /tmp/ccPe5w3o.s:5866   .debug_str:0000000000000e5c .LASF136
     /tmp/ccPe5w3o.s:5546   .debug_str:00000000000004b7 .LASF137
     /tmp/ccPe5w3o.s:5508   .debug_str:0000000000000394 .LASF139
     /tmp/ccPe5w3o.s:5596   .debug_str:0000000000000614 .LASF140
     /tmp/ccPe5w3o.s:5764   .debug_str:0000000000000a6e .LASF141
     /tmp/ccPe5w3o.s:5482   .debug_str:00000000000002dd .LASF142
     /tmp/ccPe5w3o.s:5672   .debug_str:000000000000082c .LASF143
     /tmp/ccPe5w3o.s:5572   .debug_str:0000000000000552 .LASF144
     /tmp/ccPe5w3o.s:5410   .debug_str:00000000000000b4 .LASF145
     /tmp/ccPe5w3o.s:5846   .debug_str:0000000000000d9f .LASF146
     /tmp/ccPe5w3o.s:5656   .debug_str:000000000000079c .LASF147
     /tmp/ccPe5w3o.s:5778   .debug_str:0000000000000b7f .LASF148
     /tmp/ccPe5w3o.s:5680   .debug_str:000000000000084a .LASF149
     /tmp/ccPe5w3o.s:5788   .debug_str:0000000000000bc7 .LASF150
     /tmp/ccPe5w3o.s:5834   .debug_str:0000000000000d51 .LASF151
     /tmp/ccPe5w3o.s:5664   .debug_str:00000000000007e4 .LASF152
     /tmp/ccPe5w3o.s:5542   .debug_str:0000000000000495 .LASF153
     /tmp/ccPe5w3o.s:5614   .debug_str:0000000000000683 .LASF154
     /tmp/ccPe5w3o.s:5836   .debug_str:0000000000000d69 .LASF155
GAS LISTING /tmp/ccPe5w3o.s 			page 47


     /tmp/ccPe5w3o.s:5850   .debug_str:0000000000000db3 .LASF156
     /tmp/ccPe5w3o.s:5792   .debug_str:0000000000000c00 .LASF157
     /tmp/ccPe5w3o.s:5470   .debug_str:0000000000000276 .LASF159
     /tmp/ccPe5w3o.s:5684   .debug_str:0000000000000874 .LASF160
     /tmp/ccPe5w3o.s:5472   .debug_str:000000000000028b .LASF161
     /tmp/ccPe5w3o.s:5802   .debug_str:0000000000000c4e .LASF162
     /tmp/ccPe5w3o.s:5814   .debug_str:0000000000000cb4 .LASF163
     /tmp/ccPe5w3o.s:5634   .debug_str:0000000000000712 .LASF164
     /tmp/ccPe5w3o.s:5564   .debug_str:000000000000050d .LASF165
     /tmp/ccPe5w3o.s:5824   .debug_str:0000000000000d01 .LASF166
     /tmp/ccPe5w3o.s:5422   .debug_str:000000000000010f .LASF167
     /tmp/ccPe5w3o.s:5456   .debug_str:000000000000021e .LASF168
     /tmp/ccPe5w3o.s:5816   .debug_str:0000000000000cc7 .LASF169
     /tmp/ccPe5w3o.s:5626   .debug_str:00000000000006e6 .LASF170
     /tmp/ccPe5w3o.s:5682   .debug_str:0000000000000860 .LASF171
     /tmp/ccPe5w3o.s:5630   .debug_str:0000000000000705 .LASF172
     /tmp/ccPe5w3o.s:5754   .debug_str:0000000000000a1d .LASF173
     /tmp/ccPe5w3o.s:5492   .debug_str:0000000000000314 .LASF174
     /tmp/ccPe5w3o.s:5550   .debug_str:00000000000004c6 .LASF175
     /tmp/ccPe5w3o.s:5558   .debug_str:00000000000004f0 .LASF176
     /tmp/ccPe5w3o.s:5826   .debug_str:0000000000000d0b .LASF177
     /tmp/ccPe5w3o.s:5432   .debug_str:0000000000000169 .LASF178
     /tmp/ccPe5w3o.s:5796   .debug_str:0000000000000c0f .LASF179
     /tmp/ccPe5w3o.s:5512   .debug_str:00000000000003a9 .LASF180
     /tmp/ccPe5w3o.s:5590   .debug_str:00000000000005ed .LASF181
     /tmp/ccPe5w3o.s:5768   .debug_str:0000000000000b3f .LASF182
     /tmp/ccPe5w3o.s:5436   .debug_str:000000000000017b .LASF183
     /tmp/ccPe5w3o.s:5760   .debug_str:0000000000000a5c .LASF184
     /tmp/ccPe5w3o.s:5424   .debug_str:0000000000000125 .LASF185
     /tmp/ccPe5w3o.s:5406   .debug_str:0000000000000088 .LASF186
     /tmp/ccPe5w3o.s:5388   .debug_str:0000000000000000 .LASF187
     /tmp/ccPe5w3o.s:5688   .debug_str:0000000000000892 .LASF188
     /tmp/ccPe5w3o.s:5708   .debug_str:000000000000090b .LASF189
     /tmp/ccPe5w3o.s:5674   .debug_str:0000000000000837 .LASF190
     /tmp/ccPe5w3o.s:5692   .debug_str:00000000000008ab .LASF191
     /tmp/ccPe5w3o.s:5706   .debug_str:0000000000000904 .LASF193
     /tmp/ccPe5w3o.s:5532   .debug_str:0000000000000444 .LASF195
     /tmp/ccPe5w3o.s:5646   .debug_str:000000000000075b .LASF196
     /tmp/ccPe5w3o.s:5414   .debug_str:00000000000000cd .LASF239
     /tmp/ccPe5w3o.s:5420   .debug_str:00000000000000f6 .LASF197
     /tmp/ccPe5w3o.s:5476   .debug_str:00000000000002a9 .LASF198
     /tmp/ccPe5w3o.s:5712   .debug_str:0000000000000934 .LASF199
     /tmp/ccPe5w3o.s:5616   .debug_str:000000000000069b .LASF200
     /tmp/ccPe5w3o.s:5408   .debug_str:0000000000000093 .LASF201
     /tmp/ccPe5w3o.s:5548   .debug_str:00000000000004bd .LASF202
     /tmp/ccPe5w3o.s:5618   .debug_str:00000000000006a5 .LASF203
     /tmp/ccPe5w3o.s:5776   .debug_str:0000000000000b75 .LASF204
     /tmp/ccPe5w3o.s:5848   .debug_str:0000000000000da8 .LASF205
     /tmp/ccPe5w3o.s:1184   .text:00000000000005ec .LFB60
     /tmp/ccPe5w3o.s:1266   .text:000000000000063c .LFE60
     /tmp/ccPe5w3o.s:1195   .text:00000000000005f8 .LBB142
     /tmp/ccPe5w3o.s:1207   .text:0000000000000600 .LBE142
     /tmp/ccPe5w3o.s:5190   .debug_loc:0000000000000000 .LLST16
     /tmp/ccPe5w3o.s:1220   .text:0000000000000610 .LBB144
     /tmp/ccPe5w3o.s:1227   .text:0000000000000614 .LBE144
     /tmp/ccPe5w3o.s:5199   .debug_loc:0000000000000025 .LLST17
     /tmp/ccPe5w3o.s:1150   .text:00000000000005ec .LFE59
GAS LISTING /tmp/ccPe5w3o.s 			page 48


     /tmp/ccPe5w3o.s:5770   .debug_str:0000000000000b49 .LASF206
     /tmp/ccPe5w3o.s:5832   .debug_str:0000000000000d49 .LASF207
     /tmp/ccPe5w3o.s:5570   .debug_str:0000000000000548 .LASF208
     /tmp/ccPe5w3o.s:5206   .debug_loc:0000000000000048 .LLST9
     /tmp/ccPe5w3o.s:787    .text:0000000000000390 .LBB108
     /tmp/ccPe5w3o.s:802    .text:000000000000039c .LBE108
     /tmp/ccPe5w3o.s:806    .text:00000000000003a0 .LBB110
     /tmp/ccPe5w3o.s:821    .text:00000000000003ac .LBE110
     /tmp/ccPe5w3o.s:840    .text:00000000000003c4 .LBB112
     /tmp/ccPe5w3o.s:5366   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccPe5w3o.s:946    .text:0000000000000454 .LBB114
     /tmp/ccPe5w3o.s:1023   .text:00000000000004ec .LBE114
     /tmp/ccPe5w3o.s:5221   .debug_loc:0000000000000091 .LLST10
     /tmp/ccPe5w3o.s:949    .text:0000000000000454 .LBB117
     /tmp/ccPe5w3o.s:979    .text:0000000000000490 .LBE117
     /tmp/ccPe5w3o.s:5236   .debug_loc:00000000000000da .LLST11
     /tmp/ccPe5w3o.s:964    .text:0000000000000470 .LVL46
     /tmp/ccPe5w3o.s:970    .text:0000000000000480 .LVL47
     /tmp/ccPe5w3o.s:976    .text:0000000000000490 .LVL48
     /tmp/ccPe5w3o.s:980    .text:0000000000000490 .LBB120
     /tmp/ccPe5w3o.s:1007   .text:00000000000004cc .LBE120
     /tmp/ccPe5w3o.s:992    .text:00000000000004ac .LVL49
     /tmp/ccPe5w3o.s:998    .text:00000000000004bc .LVL50
     /tmp/ccPe5w3o.s:1004   .text:00000000000004cc .LVL51
     /tmp/ccPe5w3o.s:1013   .text:00000000000004dc .LVL52
     /tmp/ccPe5w3o.s:1019   .text:00000000000004ec .LVL53
     /tmp/ccPe5w3o.s:942    .text:0000000000000450 .LVL43
     /tmp/ccPe5w3o.s:1035   .text:000000000000050c .LVL56
     /tmp/ccPe5w3o.s:861    .text:00000000000003ec .LBB124
     /tmp/ccPe5w3o.s:1053   .text:0000000000000528 .LBB126
     /tmp/ccPe5w3o.s:1129   .text:00000000000005c0 .LBE126
     /tmp/ccPe5w3o.s:5247   .debug_loc:0000000000000110 .LLST12
     /tmp/ccPe5w3o.s:1056   .text:0000000000000528 .LBB129
     /tmp/ccPe5w3o.s:1085   .text:0000000000000564 .LBE129
     /tmp/ccPe5w3o.s:5262   .debug_loc:0000000000000159 .LLST13
     /tmp/ccPe5w3o.s:1070   .text:0000000000000544 .LVL61
     /tmp/ccPe5w3o.s:1076   .text:0000000000000554 .LVL62
     /tmp/ccPe5w3o.s:1082   .text:0000000000000564 .LVL63
     /tmp/ccPe5w3o.s:1086   .text:0000000000000564 .LBB132
     /tmp/ccPe5w3o.s:1113   .text:00000000000005a0 .LBE132
     /tmp/ccPe5w3o.s:1098   .text:0000000000000580 .LVL64
     /tmp/ccPe5w3o.s:1104   .text:0000000000000590 .LVL65
     /tmp/ccPe5w3o.s:1110   .text:00000000000005a0 .LVL66
     /tmp/ccPe5w3o.s:1119   .text:00000000000005b0 .LVL67
     /tmp/ccPe5w3o.s:1125   .text:00000000000005c0 .LVL68
     /tmp/ccPe5w3o.s:1049   .text:0000000000000524 .LVL58
     /tmp/ccPe5w3o.s:1141   .text:00000000000005e0 .LVL71
     /tmp/ccPe5w3o.s:888    .text:000000000000041c .LBB136
     /tmp/ccPe5w3o.s:899    .text:0000000000000420 .LBE136
     /tmp/ccPe5w3o.s:5273   .debug_loc:000000000000018f .LLST14
     /tmp/ccPe5w3o.s:904    .text:0000000000000424 .LBB138
     /tmp/ccPe5w3o.s:915    .text:0000000000000428 .LBE138
     /tmp/ccPe5w3o.s:5280   .debug_loc:00000000000001b2 .LLST15
     /tmp/ccPe5w3o.s:828    .text:00000000000003b8 .LVL32
     /tmp/ccPe5w3o.s:859    .text:00000000000003ec .LVL34
     /tmp/ccPe5w3o.s:878    .text:000000000000040c .LVL35
     /tmp/ccPe5w3o.s:883    .text:0000000000000418 .LVL36
GAS LISTING /tmp/ccPe5w3o.s 			page 49


     /tmp/ccPe5w3o.s:1039   .text:0000000000000518 .LVL57
     /tmp/ccPe5w3o.s:1145   .text:00000000000005ec .LVL72
     /tmp/ccPe5w3o.s:610    .text:00000000000002c4 .LFB58
     /tmp/ccPe5w3o.s:761    .text:0000000000000374 .LFE58
     /tmp/ccPe5w3o.s:622    .text:00000000000002d4 .LBB66
     /tmp/ccPe5w3o.s:637    .text:00000000000002e0 .LBE66
     /tmp/ccPe5w3o.s:641    .text:00000000000002e4 .LBB68
     /tmp/ccPe5w3o.s:656    .text:00000000000002f0 .LBE68
     /tmp/ccPe5w3o.s:677    .text:0000000000000320 .LBB70
     /tmp/ccPe5w3o.s:685    .text:0000000000000324 .LBE70
     /tmp/ccPe5w3o.s:5287   .debug_loc:00000000000001d5 .LLST5
     /tmp/ccPe5w3o.s:694    .text:0000000000000334 .LBB72
     /tmp/ccPe5w3o.s:706    .text:000000000000033c .LBE72
     /tmp/ccPe5w3o.s:5294   .debug_loc:00000000000001f8 .LLST6
     /tmp/ccPe5w3o.s:711    .text:0000000000000340 .LBB74
     /tmp/ccPe5w3o.s:722    .text:0000000000000344 .LBE74
     /tmp/ccPe5w3o.s:5302   .debug_loc:000000000000021c .LLST7
     /tmp/ccPe5w3o.s:727    .text:0000000000000348 .LBB76
     /tmp/ccPe5w3o.s:738    .text:000000000000034c .LBE76
     /tmp/ccPe5w3o.s:5309   .debug_loc:000000000000023f .LLST8
     /tmp/ccPe5w3o.s:668    .text:0000000000000310 .LVL22
     /tmp/ccPe5w3o.s:758    .text:0000000000000370 .LVL31
     /tmp/ccPe5w3o.s:10     .text:0000000000000000 .LFB57
     /tmp/ccPe5w3o.s:604    .text:00000000000002c4 .LFE57
     /tmp/ccPe5w3o.s:5726   .debug_str:0000000000000992 .LASF209
     /tmp/ccPe5w3o.s:5654   .debug_str:0000000000000791 .LASF210
     /tmp/ccPe5w3o.s:419    .text:00000000000001b4 .LBB56
     /tmp/ccPe5w3o.s:436    .text:00000000000001c4 .LBE56
     /tmp/ccPe5w3o.s:5316   .debug_loc:0000000000000262 .LLST0
     /tmp/ccPe5w3o.s:5323   .debug_loc:0000000000000285 .LLST1
     /tmp/ccPe5w3o.s:426    .text:00000000000001bc .LBB58
     /tmp/ccPe5w3o.s:434    .text:00000000000001c4 .LBE58
     /tmp/ccPe5w3o.s:5330   .debug_loc:00000000000002a8 .LLST2
     /tmp/ccPe5w3o.s:289    .text:00000000000000f4 .LVL5
     /tmp/ccPe5w3o.s:310    .text:0000000000000110 .LVL6
     /tmp/ccPe5w3o.s:335    .text:0000000000000134 .LVL7
     /tmp/ccPe5w3o.s:371    .text:0000000000000168 .LVL8
     /tmp/ccPe5w3o.s:395    .text:000000000000018c .LVL9
     /tmp/ccPe5w3o.s:405    .text:000000000000019c .LVL10
     /tmp/ccPe5w3o.s:418    .text:00000000000001b4 .LVL11
     /tmp/ccPe5w3o.s:474    .text:0000000000000200 .LVL14
     /tmp/ccPe5w3o.s:495    .text:000000000000021c .LVL15
     /tmp/ccPe5w3o.s:516    .text:0000000000000238 .LVL16
     /tmp/ccPe5w3o.s:540    .text:0000000000000264 .LVL17
     /tmp/ccPe5w3o.s:550    .text:000000000000027c .LVL18
     /tmp/ccPe5w3o.s:567    .text:0000000000000290 .LVL19
     /tmp/ccPe5w3o.s:589    .text:00000000000002b0 .LVL20
     /tmp/ccPe5w3o.s:598    .text:00000000000002c0 .LVL21
     /tmp/ccPe5w3o.s:25     .text:0000000000000014 .LBB48
     /tmp/ccPe5w3o.s:41     .text:0000000000000020 .LBE48
     /tmp/ccPe5w3o.s:45     .text:0000000000000024 .LBB50
     /tmp/ccPe5w3o.s:60     .text:0000000000000030 .LBE50
     /tmp/ccPe5w3o.s:64     .text:0000000000000034 .LBB52
     /tmp/ccPe5w3o.s:79     .text:0000000000000040 .LBE52
     /tmp/ccPe5w3o.s:239    .text:00000000000000c8 .LBB61
     /tmp/ccPe5w3o.s:250    .text:00000000000000cc .LBE61
     /tmp/ccPe5w3o.s:5339   .debug_loc:00000000000002cd .LLST3
GAS LISTING /tmp/ccPe5w3o.s 			page 50


     /tmp/ccPe5w3o.s:255    .text:00000000000000d0 .LBB63
     /tmp/ccPe5w3o.s:266    .text:00000000000000d4 .LBE63
     /tmp/ccPe5w3o.s:5346   .debug_loc:00000000000002f0 .LLST4
     /tmp/ccPe5w3o.s:232    .text:00000000000000c4 .LVL0
     /tmp/ccPe5w3o.s:5526   .debug_str:0000000000000422 .LASF211
     /tmp/ccPe5w3o.s:5392   .debug_str:000000000000002b .LASF213
     /tmp/ccPe5w3o.s:5430   .debug_str:0000000000000164 .LASF212
     /tmp/ccPe5w3o.s:5822   .debug_str:0000000000000cf4 .LASF214
     /tmp/ccPe5w3o.s:5774   .debug_str:0000000000000b5e .LASF215
     /tmp/ccPe5w3o.s:5502   .debug_str:000000000000036b .LASF216
     /tmp/ccPe5w3o.s:5528   .debug_str:0000000000000427 .LASF217
     /tmp/ccPe5w3o.s:5812   .debug_str:0000000000000ca0 .LASF222
     /tmp/ccPe5w3o.s:5786   .debug_str:0000000000000bbe .LASF224
     /tmp/ccPe5w3o.s:5794   .debug_str:0000000000000c09 .LASF218
     /tmp/ccPe5w3o.s:5504   .debug_str:0000000000000381 .LASF220
     /tmp/ccPe5w3o.s:5650   .debug_str:0000000000000777 .LASF219
     /tmp/ccPe5w3o.s:5396   .debug_str:0000000000000035 .LASF221
     /tmp/ccPe5w3o.s:5598   .debug_str:0000000000000620 .LASF223
     /tmp/ccPe5w3o.s:5686   .debug_str:000000000000087d .LASF225
     /tmp/ccPe5w3o.s:5540   .debug_str:000000000000048a .LASF226
     /tmp/ccPe5w3o.s:5658   .debug_str:00000000000007b1 .LASF227
     /tmp/ccPe5w3o.s:5854   .debug_str:0000000000000de9 .LASF228
     /tmp/ccPe5w3o.s:5534   .debug_str:0000000000000457 .LASF229
     /tmp/ccPe5w3o.s:1194   .text:00000000000005f8 .LVL73
     /tmp/ccPe5w3o.s:1204   .text:0000000000000600 .LVL74
     /tmp/ccPe5w3o.s:1219   .text:0000000000000610 .LVL75
     /tmp/ccPe5w3o.s:1225   .text:0000000000000614 .LVL76
     /tmp/ccPe5w3o.s:830    .text:00000000000003bc .LVL33
     /tmp/ccPe5w3o.s:925    .text:0000000000000434 .LVL41
     /tmp/ccPe5w3o.s:933    .text:0000000000000444 .LVL42
     /tmp/ccPe5w3o.s:1031   .text:0000000000000500 .LVL55
     /tmp/ccPe5w3o.s:1137   .text:00000000000005d4 .LVL70
     /tmp/ccPe5w3o.s:945    .text:0000000000000454 .LVL44
     /tmp/ccPe5w3o.s:961    .text:0000000000000468 .LVL45
     /tmp/ccPe5w3o.s:1028   .text:00000000000004fc .LVL54
     /tmp/ccPe5w3o.s:1052   .text:0000000000000528 .LVL59
     /tmp/ccPe5w3o.s:1067   .text:000000000000053c .LVL60
     /tmp/ccPe5w3o.s:1134   .text:00000000000005d0 .LVL69
     /tmp/ccPe5w3o.s:887    .text:000000000000041c .LVL37
     /tmp/ccPe5w3o.s:896    .text:0000000000000420 .LVL38
     /tmp/ccPe5w3o.s:903    .text:0000000000000424 .LVL39
     /tmp/ccPe5w3o.s:912    .text:0000000000000428 .LVL40
     /tmp/ccPe5w3o.s:676    .text:0000000000000320 .LVL23
     /tmp/ccPe5w3o.s:683    .text:0000000000000324 .LVL24
     /tmp/ccPe5w3o.s:693    .text:0000000000000334 .LVL25
     /tmp/ccPe5w3o.s:703    .text:000000000000033c .LVL26
     /tmp/ccPe5w3o.s:710    .text:0000000000000340 .LVL27
     /tmp/ccPe5w3o.s:719    .text:0000000000000344 .LVL28
     /tmp/ccPe5w3o.s:726    .text:0000000000000348 .LVL29
     /tmp/ccPe5w3o.s:735    .text:000000000000034c .LVL30
     /tmp/ccPe5w3o.s:432    .text:00000000000001c4 .LVL13
     /tmp/ccPe5w3o.s:425    .text:00000000000001bc .LVL12
     /tmp/ccPe5w3o.s:238    .text:00000000000000c8 .LVL1
     /tmp/ccPe5w3o.s:247    .text:00000000000000cc .LVL2
     /tmp/ccPe5w3o.s:254    .text:00000000000000d0 .LVL3
     /tmp/ccPe5w3o.s:263    .text:00000000000000d4 .LVL4
     /tmp/ccPe5w3o.s:1274   .debug_info:0000000000000000 .Ldebug_info0
GAS LISTING /tmp/ccPe5w3o.s 			page 51


     /tmp/ccPe5w3o.s:95     .text:000000000000005c .LBB55
     /tmp/ccPe5w3o.s:227    .text:00000000000000b8 .LBE55
     /tmp/ccPe5w3o.s:282    .text:00000000000000e8 .LBB60
     /tmp/ccPe5w3o.s:601    .text:00000000000002c4 .LBE60
     /tmp/ccPe5w3o.s:855    .text:00000000000003e0 .LBE112
     /tmp/ccPe5w3o.s:936    .text:0000000000000444 .LBB140
     /tmp/ccPe5w3o.s:1042   .text:0000000000000518 .LBE140
     /tmp/ccPe5w3o.s:874    .text:0000000000000400 .LBE124
     /tmp/ccPe5w3o.s:1043   .text:0000000000000518 .LBB141
     /tmp/ccPe5w3o.s:1148   .text:00000000000005ec .LBE141
     /tmp/ccPe5w3o.s:1153   .gcc_except_table:0000000000000000 .LLSDA59

UNDEFINED SYMBOLS
_ZN13ConsoleKernel4putcEc
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12createThreadEPFvPvES0_Ph
_ZN3TCB4exitEv
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB4joinEPS_
_Znwm
_ZN4_sem5closeEv
_ZN4_sem4waitEv
_ZN4_sem6signalEv
_ZN3TCB7runningE
_ZN8sleeping3putEP3TCBi
_ZN13ConsoleKernel4getcEv
_ZN8sleeping12timeDecreaseEv
plic_claim
_ZN13ConsoleKernel8instanceE
_Z10sem_signalP4_sem
plic_complete
_Z8sem_openPP4_semj
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
